<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rookey.Frame.Operate.Base</name>
    </assembly>
    <members>
        <member name="T:Rookey.Frame.Operate.Base.BpmOperate">
            <summary>
            工作流操作类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllFlowClass(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_FlowClass,System.Boolean}})">
            <summary>
            获取所流程分类
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowClassById(System.Guid)">
            <summary>
            根据ID获取流程分类
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Rookey.Frame.Operate.Base.BpmOperate.LoadFlowClassTree(System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)”忽略有格式错误的 XML 注释 -->
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.HandleFlowTreeNode(Rookey.Frame.Operate.Base.TempModel.TreeNode)">
            <summary>
            处理流程分类节点，在分类叶子节点上添加流程信息节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllWorkflows(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_WorkFlow,System.Boolean}})">
            <summary>
            获取所有流程
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkflow(System.Guid)">
            <summary>
            获取流程
            </summary>
            <param name="id">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetModuleWorkFlow(System.Guid)">
            <summary>
            获取模块流程
            </summary>
            <param name="moduleId">模块id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkFlowOfFlowClass(System.Guid)">
            <summary>
            获取流程分类下的流程
            </summary>
            <param name="classId">分类ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkflowModuleId(System.Guid)">
            <summary>
            获取流程的关联模块ID
            </summary>
            <param name="workflowId">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsSubWorkFlow(System.Guid)">
            <summary>
            判断是不是子流程
            </summary>
            <param name="workflowId">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkflowInstance(System.Guid,System.Guid)">
            <summary>
            获取记录的流程实例
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkflowInstanceById(System.Guid)">
            <summary>
            获取流程实例
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllWorkNodes(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_WorkNode,System.Boolean}})">
            <summary>
            获取所有流程节点
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNode(System.Guid)">
            <summary>
            获取流程节点
            </summary>
            <param name="workNodeId">流程节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodesOfFlow(System.Guid)">
            <summary>
            获取流程的所有流程节点
            </summary>
            <param name="workflowId">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNode(System.Guid)">
            <summary>
            获取发起节点
            </summary>
            <param name="workflowId">流程id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetEndNode(System.Guid)">
            <summary>
            获取结束节点
            </summary>
            <param name="workflowId">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNodeByModuleId(System.Guid)">
            <summary>
            根据模块ID获取发起节点
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetPrexNode(System.Guid,System.Guid)">
            <summary>
            获取当前节点的前一节点集合
            </summary>
            <param name="workflowId">流程ID</param>
            <param name="workNodeId">当前节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetPrexNodes(System.Guid,System.Guid)">
            <summary>
            获取当前节点的所有前面节点集合（递归）
            </summary>
            <param name="workflowId">流程ID</param>
            <param name="workNodeId">当前节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetNextWorkNodes(System.Guid,System.Guid)">
            <summary>
            获取当前节点的下一节点集合
            </summary>
            <param name="workflowId">流程id</param>
            <param name="currNodeId">起始节点id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetNextActionNode(System.Collections.Generic.List{Rookey.Frame.Model.Bpm.Bpm_WorkNode},Rookey.Frame.Model.Bpm.Bpm_WorkFlow,Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance,Rookey.Frame.Model.Bpm.Bpm_WorkNodeInstance)">
            <summary>
            获取下一审批节点
            </summary>
            <param name="nextNodes">下一节点集合</param>
            <param name="workflow">流程</param>
            <param name="currNode">当前节点</param>
            <param name="workFlowInst">流程实例</param>
            <param name="currNodeInst">当前实例节点</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodeByTagId(System.Guid,System.String)">
            <summary>
            根据tagId获取流程节点
            </summary>
            <param name="workflowId">流程ID</param>
            <param name="tagId">tagid</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetNextNodeHandler(Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance)">
            <summary>
            获取下一节点的处理者
            </summary>
            <param name="nextNode">下一节点</param>
            <param name="currUser">当前节点处理人</param>
            <param name="workFlowInst">流程实例</param>
            <returns>返回员工ID集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetPreNodeHandler(Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance)">
            <summary>
            获取前一节点的处理人集合
            </summary>
            <param name="currNode">当前节点</param>
            <param name="workflowInst">流程实例</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNodeHandler(System.Guid,Rookey.Frame.Model.Bpm.Bpm_WorkNode)">
            <summary>
            获取发起节点处理者
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="tempLaunchNode">发起节点</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetParentFlowNode(System.Guid)">
            <summary>
            获取子流程的父流程当前节点
            </summary>
            <param name="subWorkflowId">子流程节点</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetBackNodes(System.Guid)">
            <summary>
            获取回退节点集合
            </summary>
            <param name="toDoTaskId">待办ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodeInstanceById(System.Guid)">
            <summary>
            获取流程节点实例
            </summary>
            <param name="id">节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllWorkLines(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_WorkLine,System.Boolean}})">
            <summary>
            获取所有流程连线
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkLinesOfFlow(System.Guid)">
            <summary>
            获取流程中所有流程连线
            </summary>
            <param name="workflowId">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkLineByTagId(System.Guid,System.String)">
            <summary>
            根据tagId获取流程连线
            </summary>
            <param name="workflowId">流程ID</param>
            <param name="tagId">tagid</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllWorkButtons(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_FlowBtn,System.Boolean}})">
            <summary>
            获取所有流程按钮
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetAllApprovalBtnConfigs(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Bpm.Bpm_NodeBtnConfig,System.Boolean}})">
            <summary>
            获取所有审批按钮配置
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodeFormBtns(System.Guid,System.Guid)">
            <summary>
            获取流程表单按钮集合
            </summary>
            <param name="workflowId">流程ID</param>
            <param name="workNodeId">流程节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNodeFlowBtns(System.Nullable{System.Guid})">
            <summary>
            获取发起节点流程操作按钮集合
            </summary>
            <param name="todoTaskId">待办ID，针对回退到发起节点时的待办ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetNodeFlowBtns(System.Guid,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据待办任务ID获取审批表单流程操作按钮集合
            </summary>
            <param name="todoTaskId">待办任务ID</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.StartProcess(System.Guid,System.Guid,Rookey.Frame.Base.UserInfo,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.List{System.Guid})">
            <summary>
            发起流程
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="currUser">发起人</param>
            <param name="parentFlowInstId">父流程实例ID</param>
            <param name="parentWorkTodoId">父待办ID</param>
            <param name="detailIds">当前子流程需要发起的所有明细ID集合，判断所有子流程是否结束时用到</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.ApproveProcess(System.Guid,System.String,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.EnumSpace.WorkActionEnum,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            审批流程
            </summary>
            <param name="workTodoId">待办任务ID</param>
            <param name="approvalOpinions">审批意见</param>
            <param name="currUser">当前用户</param>
            <param name="workAction">审批动作</param>
            <param name="returnNodeId">针对回退时回退节点ID</param>
            <param name="directHandler">针对指派时被指派人ID</param>
            <returns></returns>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.BpmOperate.lockObj">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.HandleProcess(Rookey.Frame.Model.Bpm.Bpm_WorkFlow,Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance,Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Model.Bpm.Bpm_WorkNodeInstance,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.EnumSpace.WorkActionEnum,System.String,Rookey.Frame.Model.Bpm.Bpm_WorkToDoList,Rookey.Frame.Model.Bpm.Bpm_WorkNode,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.List{System.Guid})">
            <summary>
            处理流程
            </summary>
            <param name="workflow">流程</param>
            <param name="workFlowInst">流程实例</param>
            <param name="workNode">流程节点</param>
            <param name="workNodeInst">流程节点实例</param>
            <param name="currUser">当前用户</param>
            <param name="workAction">操作动作</param>
            <param name="approvalOpinions">审批意见</param>
            <param name="workTodo">审批时处理的当前待办任务</param>
            <param name="returnNode">回退时的回退节点</param>
            <param name="directHandler">指派时的人员ID</param>
            <param name="parentWorkTodoId">父待办ID，针对发起子流程</param>
            <param name="detailIds">当前子流程需要发起的所有明细ID集合，判断所有子流程是否结束时用到</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.TransferWorkToDoHistory(Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance,Rookey.Frame.Base.UserInfo)">
            <summary>
            审批完成后的数据迁移到待办历史数据表中
            </summary>
            <param name="workFlowInst">流程已结束的流程实例对象</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowStatusAndErrPrex(Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum@,System.String@)">
            <summary>
            根据操作动作获取流程状态
            </summary>
            <param name="workAction">操作动作</param>
            <param name="workflowStatus">流程状态</param>
            <param name="errPrex">异常前缀</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowErrPrex(Rookey.Frame.Model.EnumSpace.WorkActionEnum)">
            <summary>
            获取流程异常前缀
            </summary>
            <param name="workAction">操作动作</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowOpTypeDes(Rookey.Frame.Model.EnumSpace.WorkActionEnum)">
            <summary>
            获取流程操作类型描述
            </summary>
            <param name="workAction"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsEnabledWorkflow(System.Guid)">
            <summary>
            是否启用工作流
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.AsyncUpdateRecordFlowStatus(System.Guid,System.Guid,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            异步更新单据流程状态
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <param name="status">流程状态</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordFlowStatus(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取单据的流程状态，从流程实例中取
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordStatus(System.Guid,System.Guid)">
            <summary>
            获取单据流程状态，从单据上取
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordLastApprovalInfo(System.Guid,System.Guid)">
            <summary>
            获取记录最新的审批信息
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordApprovalInfos(Rookey.Frame.Model.Bpm.Bpm_WorkFlowInstance,System.Boolean)">
            <summary>
            获取记录的审批信息
            </summary>
            <param name="workFlowInst">流程实例对象</param>
            <param name="onlyGetLastOne">只取最新的审批信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordApprovalInfos(System.Guid,System.Boolean)">
            <summary>
            获取记录的审批信息
            </summary>
            <param name="workflowInstId">流程实例ID</param>
            <param name="onlyGetLastOne">只取最新的审批信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetRecordApprovalInfosByTodoId(System.Guid)">
            <summary>
            根据待办任务ID获取审批信息
            </summary>
            <param name="todoTaskId">待办任务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetModuleRecordApprovalInfos(System.Guid,System.Guid,System.Boolean)">
            <summary>
            根据模块记录ID获取审批信息
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <param name="onlyGetLastOne">是否只取最新一条</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetCurrentApprovalNode(System.Guid)">
            <summary>
            获取当前审批节点
            </summary>
            <param name="todoTaskId">待办任务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodeForm(System.Guid)">
            <summary>
            获取流程节点表单
            </summary>
            <param name="workNodeId">流程节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetCustomerWorkNodeFormUrl(System.Guid)">
            <summary>
            获取自定义流程表单URL
            </summary>
            <param name="workNodeId">流程节点ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNodeForm(System.Guid)">
            <summary>
            获取发起节点表单
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetLaunchNodeCustomerFormUrl(System.Guid)">
            <summary>
            获取发起节点自定义表单
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetWorkNodeIdByTodoId(System.Guid)">
            <summary>
            根据流程待办任务获取流程节点ID
            </summary>
            <param name="workTodoId">待办任务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetModuleIdAndRecordIdByTodoId(System.Guid,System.Guid@,System.Guid@)">
            <summary>
            根据待办ID获取模块ID和记录ID
            </summary>
            <param name="workTodoId">待办ID</param>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsCurrentToDoTaskHandler(System.Guid,Rookey.Frame.Base.UserInfo)">
            <summary>
            是否是当前待办任务的处理者
            </summary>
            <param name="todoTaskId">当前待办任务ID</param>
            <param name="currUser">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsAllowLaunchFlow(System.Guid,Rookey.Frame.Base.UserInfo,System.Nullable{System.Guid})">
            <summary>
            是否允许发起流程
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="currUser">当前用户</param>
            <param name="id">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsLaunchFlowCompleted(System.Guid,System.Guid)">
            <summary>
            流程是否已发起了
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="id">记录ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.IsChildFlowParentTodo(System.Guid)">
            <summary>
            当前待办是否为子流程的父待办
            </summary>
            <param name="todoTaskId">待办ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetChildFlowToDoId(System.Guid,System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            获取当前子流程待办ID
            </summary>
            <param name="parentTodoId">父待办ID</param>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="currEmpId">当前人empId</param>
            <param name="isAdmin">是否超级管理员</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetCurrentToDoHandler(System.Guid)">
            <summary>
            获取当前处理人
            </summary>
            <param name="todoTaskId">待办任务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.RemoveRecordToDo(System.Guid,System.Guid,System.Nullable{System.Int32})">
            <summary>
            移除单据待办，慎用
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">单据记录ID</param>
            <param name="defaultFlowStatus">单据还原的状态</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowLauncher(System.Guid)">
            <summary>
            根据待办ID获取发起人
            </summary>
            <param name="todoTaskId">流程待办ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.BpmOperate.GetFlowStarter(System.Guid)">
            <summary>
            获取流程发起者
            </summary>
            <param name="recordId">记录ID</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.CommonOperate">
            <summary>
            通用操作类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ReflectExecuteBLLMethod(System.Type,System.String,System.Object[],System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            反射执行业务层方法
            </summary>
            <param name="modelType">数据模型类型</param>
            <param name="methodName">方法名称</param>
            <param name="args">参数</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTempOperateReflectMethod(System.String,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            反射执行TempOperate的方法
            </summary>
            <param name="tableName">数据表名</param>
            <param name="methodName">方法名</param>
            <param name="args">参数</param>
            <param name="currUser">当前用户</param>
            <returns>返回执行结果</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTempOperateReflectMethod(System.Guid,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            反射执行TempOperate的方法
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="methodName">方法名</param>
            <param name="args">参数</param>
            <param name="currUser">当前用户</param>
            <returns>返回执行结果</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTempOperateReflectMethod(System.Type,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            反射执行TempOperate的方法
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="methodName">方法名</param>
            <param name="args">参数</param>
            <param name="currUser">当前用户</param>
            <returns>返回执行结果</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteCustomeOperateHandleMethod(System.Guid,System.String,System.Object[])">
            <summary>
            执行OperateHandleFactory类中自定义操作方法
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="methodName">方法名称</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteUserOperateHandleMethod(System.String,System.Object[])">
            <summary>
            反射执行用户操作处理方法
            </summary>
            <param name="methodName">方法名</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetFieldEnumTypeList(System.Guid,System.String)">
            <summary>
            获取枚举字段的描述、枚举值键值对，Dictionary中key为描述，value为枚举值
            </summary>
            <param name="moduleId"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetModelFieldValueByModel(System.Guid,System.Object,System.String)">
            <summary>
            获取某模块字段值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">模块数据</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetModelTitleKeyValue(System.Guid,System.Guid)">
            <summary>
            获取记录的TitleKey值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="id">记录Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetModelType(System.Guid)">
            <summary>
            获取实体类型
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetModelType(System.String)">
            <summary>
            获取某个实体的类型
            </summary>
            <param name="tableName">实体表名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetModelTypeByModuleName(System.String)">
            <summary>
            获取实体类型
            </summary>
            <param name="moduleName">模块名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetFluentValidationModelType(System.Guid)">
            <summary>
            获取FluentValidation验证类型
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntityById``1(System.Guid,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体记录
            </summary>
            <param name="id">记录Id</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntityById(System.String,System.Guid,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据Id获取实体
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="id">记录Id</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntity``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntity(System.String,System.Object,System.String,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体对象
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">条件语句</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntities``1(System.String@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体记录集合 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="errMsg">异常信息</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">排序方式,是否降序排序</param>
            <param name="top">取top多少条</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntities(System.String,System.String@,System.Object,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体记录集合 
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="errMsg">异常信息</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="permissionFilter">是否权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">排序方式,是否降序排序</param>
            <param name="top">取top多少条</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetPageEntities``1(System.String@,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取分页实体记录集合
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="pageInfo">分页信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetPageEntities(System.String,System.String@,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.Boolean,System.Object,System.String,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取分页实体记录集合
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="errMsg">异常信息</param>
            <param name="pageInfo">分页信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByField``1(System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段获取记录
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="top">取前多少条记录</param>
            <param name="fieldNames">加载字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByField(System.String,System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段值获取实体记录
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="top">取前多少条记录</param>
            <param name="fieldNames">加载字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByFieldOne``1(System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段获取单条记录
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByFieldOne(System.String,System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段获取单条记录
            </summary>
            <param name="tableName">实体表名</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.Count``1(System.String@,System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取记录数
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="errMsg">错误信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.Count(System.String,System.String@,System.Boolean,System.Object,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取记录数
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="errMsg">错误信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadReferences``1(``0,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载实体对象的关联对象（导航属性）
            </summary>
            <param name="instance">实体对象</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadReferences(System.String,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载实体对象的关联对象（导航属性）
            </summary>
            <param name="tableName">实体表名</param>
            <param name="instance">实体对象</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadReferences(System.Guid,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载实体对象的关联对象（导航属性）
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="instance">实体对象</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadListReferences``1(System.Collections.Generic.List{``0},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载关联对象（导航属性）
            </summary>
            <param name="instances">实体对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadListReferences(System.String,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载关联对象（导航属性）
            </summary>
            <param name="tableName">实体表名</param>
            <param name="instances">实体对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.LoadListReferences(System.Guid,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            加载关联对象（导航属性）
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="instances">实体对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntityById(System.Guid,System.Guid,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取模块记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="id">记录Id</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntity(System.Guid,System.Object,System.String,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntities(System.String@,System.Guid,System.Object,System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取模块记录集合
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="moduleId">模块Id</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段名</param>
            <param name="isDescs">是否降序排序</param>
            <param name="top">取前多少条数据</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByField(System.Guid,System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段获取实体记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="top">取前多少条记录</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesByFieldOne(System.Guid,System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据字段获取单条记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetPageEntities(System.String@,System.Guid,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.Boolean,System.Object,System.String,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取分页记录
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="moduleId">模块Id</param>
            <param name="pageInfo">分页信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.Count(System.String@,System.Guid,System.Boolean,System.Object,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取记录数
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="moduleId">模块Id</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.Scalar``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取实体某个字段值
            </summary>
            <param name="field">字段</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetColumnFieldValues(System.String@,System.Guid,System.String)">
            <summary>
            获取不重复的列字段值
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">列字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetColumnFieldValues``1(System.String@,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">T对象</typeparam>
            <param name="errMsg">异常信息</param>
            <param name="fieldName">字段名</param>
            <param name="exp">条件</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecord``1(``0,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作单条实体记录
            </summary>
            <param name="t">实体对象</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">更新时用到，要更新的字段</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns>如果是新增返回新增后记录Id,否则成功返回1，失败返回0</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecord(System.String,System.Object,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作单条实体记录
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="t">实体对象</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">更新时用到，要更新的字段</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns>如果是新增返回新增后记录Id,否则成功返回1，失败返回0</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecords``1(System.Collections.Generic.List{``0},Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作实体记录集合
            </summary>
            <param name="ts">记录集合</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecords(System.String,System.Object,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作实体记录集合
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="ts">记录集合</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.UpdateRecordsByExpression``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件表达式更新记录
             UpdateEntityByExpression(new { FirstName = "JJ" }, p => p.LastName == "Hendrix");
             UPDATE "Person" SET "FirstName" = 'JJ' WHERE ("LastName" = 'Hendrix')
            </summary>
            <param name="obj">要更新的值对象</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.UpdateRecordsByExpression(System.String,System.Object,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件表达式更新记录
             UpdateEntityByExpression(new { FirstName = "JJ" }, p => p.LastName == "Hendrix");
             UPDATE "Person" SET "FirstName" = 'JJ' WHERE ("LastName" = 'Hendrix')
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="updateValueObj">要更新的值对象</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecords``1(System.Collections.IEnumerable,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            删除记录
            </summary>
            <param name="ids">id集合</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="permissionValidate">是否进行权限验证，针对硬删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecords(System.String,System.Collections.IEnumerable,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            删除记录
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="ids">id集合</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="permissionValidate">是否进行权限验证，针对硬删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecordsByExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String@,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件删除记录
            </summary>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecordsByExpression(System.String,System.Object,System.String@,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件删除记录
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecord(System.Guid,System.Object,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作单条记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="t">操作对象</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">更新时用到，要更新的字段</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns>如果是新增返回新增后记录Id,否则成功返回1，失败返回0</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.OperateRecords(System.Guid,System.Object,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            操作记录集合
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="ts">对象集合</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否加载关联对象（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns>返回结果</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecords(System.Guid,System.Collections.IEnumerable,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            删除记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="ids">id集合</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="permissionValidate">是否进行权限验证，针对硬删除</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.UpdateRecordsByExpression(System.Guid,System.Object,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件表达式更新记录
             UpdateEntityByExpression(new { FirstName = "JJ" }, p => p.LastName == "Hendrix");
             UPDATE "Person" SET "FirstName" = 'JJ' WHERE ("LastName" = 'Hendrix')
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="obj">要更新的值对象</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DeleteRecordsByExpression(System.Guid,System.Object,System.String@,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件删除记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.UpdateField(System.Guid,System.Guid,System.String,System.String,System.String@,System.Data.IDbConnection,Rookey.Frame.Base.UserInfo)">
            <summary>
            更新字段值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="recordId">记录Id</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="transConn">事务连接对象</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTransaction``1(System.Collections.Generic.List{Rookey.Frame.Common.Model.TransactionModel{``0}},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            执行事务，针对T类型的对象的操作
            </summary>
            <param name="transactionObjects">事务对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTransaction(System.String,System.Object,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            执行事务，针对tableName表的操作
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="transactionObjects">事务对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteTransactionExtend(System.Collections.Generic.List{Rookey.Frame.Common.Model.TransactionExtendModel},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            执行事务，可以针对不同表的操作
            </summary>
            <param name="transactionObjects">事务扩展对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TransactionHandle(Rookey.Frame.Common.Model.TransactionTask,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            执行事务
            </summary>
            <param name="transTask">事务处理函数</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetTree``1(System.Collections.Generic.IEnumerable{``0},``0,System.Action{``0,Rookey.Frame.Operate.Base.TempModel.TreeAttributes},System.String,System.String,System.String,System.Boolean)">
            <summary>
            获得通用树结构
            </summary>
            <param name="list">子节点</param>
            <param name="root">根节点</param>
            <param name="attributeParams">扩展属性处理方法</param>
            <param name="textName">节点显示字段</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="icon">节点图标</param>
            <param name="isAsync">是否异步</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetTreeNode``1(System.Nullable{System.Guid},System.Action{``0,Rookey.Frame.Operate.Base.TempModel.TreeAttributes},System.String,System.String,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结点
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="attributeParams">扩展属性处理方法</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="textName">节点显示名称字段</param>
            <param name="sortField">排序字段名</param>
            <param name="icon">图标类</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="isAsync">是否异步加载方式</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetTreeNode(System.String,System.Nullable{System.Guid},System.Object,System.String,System.String,System.String,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结点
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="parentId">父记录Id</param>
            <param name="attributeParams">扩展属性处理方法</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="textName">节点显示名称字段</param>
            <param name="sortField">排序字段名</param>
            <param name="icon">图标类</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="isAsync">是否异步加载</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetAllChildNodesData``1(System.Nullable{System.Guid},System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结构模块所有的子结点记录
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetAllChildNodesData(System.String,System.Nullable{System.Guid},System.String,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结构模块所有的子结点记录
            </summary>
            <param name="tableName">实体表名</param>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetChildNodesData``1(System.Nullable{System.Guid},System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结构模块直接子结点记录
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetChildNodesData(System.String,System.Nullable{System.Guid},System.String,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取树结构模块直接子结点记录
            </summary>
            <param name="tableName">实体数据表名</param>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetTreeNode(System.Guid,System.Guid,System.Object,System.String,System.String,System.String,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取某个模块的树结点
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="parentId">父记录Id</param>
            <param name="attributeParams">扩展属性处理方法</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="textName">节点显示字段名</param>
            <param name="sortField">排序字段</param>
            <param name="icon">图标样式类</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="isAsync">是否异步加载</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetAllChildNodesData(System.Guid,System.Guid,System.String,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取所有的子结点记录
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetEntitiesBySql``1(System.String@,System.String,System.Object[],System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            以SQL方式获取实体集合
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="sql">sql语句</param>
            <param name="sqlParams">sql参数 SELECT * FROM Person WHERE Age = {0} Year = {1}</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteQuery(System.String@,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            以SQL方式执行查询
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="sql">sql语句</param>
            <param name="sqlParams">sql参数</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteScale(System.String@,System.String,System.Object[],System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取查询到的第一行第一列的数据
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="sql">sql语句</param>
            <param name="sqlParams">sql参数 SELECT * FROM Person WHERE Age = {0} Year = {1}</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExecuteNonQuery(System.String@,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            执行增删改语句
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="sql">sql</param>
            <param name="sqlParams">sql参数</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.RunProcedureNoQuery(System.String@,System.Collections.Generic.Dictionary{System.String,System.Object}@,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            执行存储过程，针对非查询
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="outParams">输出参数</param>
            <param name="procedureName">存储过程名</param>
            <param name="inParams">输入参数 eg:new{Age=30}</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.RunProcedure(System.String@,System.Collections.Generic.Dictionary{System.String,System.Object}@,System.String,System.Object,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            执行存储过程，针对查询
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="outParams">输出参数</param>
            <param name="procedureName">存储过程名</param>
            <param name="inParams">输入参数 eg:new{Age=30}</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns>返回查询记录</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.PagingQueryByProcedure(System.String@,System.Int64@,System.String,System.String,System.String,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            存储过程分页查询
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="total">总记录数</param>
            <param name="tableName">表名或SQL语句</param>
            <param name="fields">查询字段</param>
            <param name="where">条件</param>
            <param name="pageInfo">分页对象</param>
            <param name="connString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.SaveRecord(Rookey.Frame.Base.UserInfo,Rookey.Frame.Operate.Base.TempModel.FormDataObject,System.String@)">
            <summary>
            通用保存（非事务方式）
            </summary>
            <param name="currUser">当前用户</param>
            <param name="formDataObj">表单数据</param>
            <param name="errMsg">异常信息</param>
            <returns>返回操作结果，不为空GUID成功，否则失败</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.FastSave(Rookey.Frame.Base.UserInfo,Rookey.Frame.Operate.Base.TempModel.FormFastObject,System.String@,System.Boolean)">
            <summary>
            通用保存（快速，可启用事务）
            </summary>
            <param name="currUser">当前用户</param>
            <param name="formObj">表单对象</param>
            <param name="errMsg">异常信息</param>
            <param name="isOpenTran">是否启用事务，默认为是</param>
            <returns>返回操作结果，不为空GUID成功，否则失败</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ImportData(System.Guid,Rookey.Frame.Base.UserInfo,System.String)">
            <summary>
            通用数据导入
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="currUser">当前用户</param>
            <param name="importFile">导入文件（绝对路径）</param>
            <returns>返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExportData(Rookey.Frame.Operate.Base.TempModel.GridDataParmas,Rookey.Frame.Base.UserInfo,System.String,System.Nullable{System.Guid})">
            <summary>
            通用数据导出
            </summary>
            <param name="gridParams">网格参数</param>
            <param name="currUser">当前用户</param>
            <param name="fileName">导出文件（绝对路径）</param>
            <param name="viewId">视图ID</param>
            <returns>返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ModelVerify(System.Guid,System.Object,System.Collections.Generic.List{System.String})">
            <summary>
            实体基础验证，包括FluentValidation验证、唯一性验证
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="verifyFields">需要验证的字段</param>
            <returns>验证不通过返回验证错误信息，返回空字符串表示验证通过</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.FluentVerify(System.Guid,System.Object)">
            <summary>
            FluentValidation验证
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.PrimaryKeyVerify(System.Guid,System.Object,System.Object@)">
            <summary>
            主键唯一验证
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="existModel">主键重复的实体对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.FormFieldVerify(System.Guid,System.Object,System.Collections.Generic.List{System.String})">
            <summary>
            表单字段配置验证
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="verifyFields">需要验证字段的字段集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ImportCheck(System.Guid,System.Guid,System.String,System.String@)">
            <summary>
            数据导入检查
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="userId">当前用户Id</param>
            <param name="importFile">导入文件（绝对路径）</param>
            <param name="errMsg">异常信息</param>
            <returns>验证通过返回封装好的实体集合，否则返回空</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetConditionDic(System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取客户端数据过滤条件
            </summary>
            <param name="condition">条件</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridCondition(Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取网格数据加载条件
            </summary>
            <param name="gridDataParmas">网格数据加载参数</param>
            <param name="where">返回的where语句</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridData(Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Int64@,Rookey.Frame.Base.UserInfo,System.Object)">
            <summary>
            通用网格数据加载
            </summary>
            <param name="gridDataParmas">网格数据参数</param>
            <param name="total">总记录数</param>
            <param name="currUser">当前用户</param>
            <param name="otherLamdaExpress">其他条件表达式</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridDataBySql(Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Int64@,Rookey.Frame.Base.UserInfo,System.Object)">
            <summary>
            通用网格数据加载，SQL方式
            </summary>
            <param name="gridDataParmas">网格数据参数</param>
            <param name="total">总记录数</param>
            <param name="currUser">当前用户</param>
            <param name="otherLamdaExpress">其他条件表达式</param>
            <returns>返回实体对象集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetTempGridData(Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Int64@,Rookey.Frame.Base.UserInfo,System.Object,System.Boolean,System.Boolean)">
            <summary>
            数据加载，返回DataTable或实体集合
            </summary>
            <param name="gridDataParmas">网格数据参数</param>
            <param name="total">总记录数</param>
            <param name="currUser">当前用户</param>
            <param name="otherLamdaExpress">其他条件表达式</param>
            <param name="isReturnDtType">是否返回DataTable</param>
            <param name="isFieldDipalyDes">返回DataTable时列头是否显示字段描述</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetQueryCondition``1(System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取Lamda表达式的查询条件
            </summary>
            <param name="conditionItems">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetQueryCondition(System.Guid,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取Lamda表达式的查询条件
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="conditionItems">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetQueryCondition(System.Guid,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取查询条件
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="dicCondition">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetQueryCondition(System.String,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取Lamda表达式的查询条件
            </summary>
            <param name="moduleName">模块Id</param>
            <param name="conditionItems">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ConditionMerge(System.Guid,System.Object,System.Object,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            条件表达式合并，返回合并后的表达式
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="expression1">lamda表达式１</param>
            <param name="expression2">lamda表达式２</param>
            <param name="isAnd">是否And合并</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridFilterCondition``1(System.String@,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回网格过滤条件
            </summary>
            <param name="whereSql">sql条件语句</param>
            <param name="q">搜索条件</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件参数</param>
            <param name="initModule">原始模块（弹出选择外键模块数据的初始模块），弹出列表用到</param>
            <param name="initField">原始字段（弹出选择外键模块数据的初始字段），弹出列表用到</param>
            <param name="otherParams">其他参数</param>
            <param name="viewId">当前网格视图Id</param>
            <param name="currUser">当前用户</param>
            <returns>返回条件表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridFilterCondition(System.String@,System.Guid,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回网格过滤条件
            </summary>
            <param name="whereSql">sql条件语句</param>
            <param name="moduleId">模块Id</param>
            <param name="q">搜索条件参数</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件参数</param>
            <param name="initModule">原始模块（弹出选择外键模块数据的初始模块），弹出列表用到</param>
            <param name="initField">原始字段（弹出选择外键模块数据的初始字段），弹出列表用到</param>
            <param name="otherParams">其他参数</param>
            <param name="viewId">当前网格视图Id</param>
            <param name="currUser">当前用户</param>
            <returns>返回条件表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetWhereSqlByCondition(System.Guid,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            根据条件集合生成
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="items">条件集合</param>
            <param name="viewId">综合视图时，视图Id</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ExpressionConditionToWhereSql(System.Guid,System.Object,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},Rookey.Frame.Base.UserInfo)">
            <summary>
            将条件表达式转成where Sql语句
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="expression">条件表达式</param>
            <param name="dbType">数据库类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetFormButtons(System.Guid,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormButton},System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="formType">表单类型</param>
            <param name="buttons">原有按钮</param>
            <param name="isAdd">是否新增页面</param>
            <param name="isDraft">是否草稿</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetFormToolTags(System.Guid,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormToolTag},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单工具标签按钮集合
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="formType">表单类型</param>
            <param name="tags">原有标签</param>
            <param name="isAdd">是否新增页面</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GridOperateVerify(System.Guid,System.String,System.Collections.Generic.List{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            视图按钮操作前验证
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="buttonText">按钮名称</param>
            <param name="ids">操作记录Id集合</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ModelCommonPropertySetValue(System.Guid,System.Object,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            公共属性赋值，创建人、创建时间、修改人、修改时间等字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="isAdd">是否新增</param>
            <param name="user">操作用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetGridDataParams(System.Web.HttpRequestBase)">
            <summary>
            获取网格参数
            </summary>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetFormData(System.Guid,System.Guid,Rookey.Frame.Model.EnumSpace.FormTypeEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单数据
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="id">记录Id</param>
            <param name="formType">表单类型</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.CreateTable(System.Type,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            创建数据表
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>创建成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DropTable(System.Type,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除数据表
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>删除成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.AlterTable(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改数据表
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="command">操作sql，如：[ALTER TABLE a] ADD Column b int</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ColumnIsExists(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            数据列是否存在
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.AddColumn(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            增加数据列
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.AlterColumn(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改数据列
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ChangeColumnName(System.Type,System.String,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改列名
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="fieldName">字段名称</param>
            <param name="oldFieldName">旧的字段名</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DropColumn(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除列
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="columnName">列名</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Rookey.Frame.Operate.Base.CommonOperate.CreateIndex(System.Type,System.Object,System.String,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})”忽略有格式错误的 XML 注释 -->
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.DropIndex(System.Type,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除索引
            </summary>
            <param name="modelType">实体类型对象</param>
            <param name="indexName">索引名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ClearCache``1">
            <summary>
            清除当前模块缓存
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ClearCache(System.String)">
            <summary>
            清除模块缓存
            </summary>
            <param name="tableName">模块表名</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ClearCache(System.Guid)">
            <summary>
            清除模块缓存
            </summary>
            <param name="moduleId">模块ID</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.ClearAllCache">
            <summary>
            清除所有缓存，不包含自定义缓存
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.SetCustomerCache(System.String,System.Object)">
            <summary>
            设置自定义缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="data">数据</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.GetCustomerCache``1(System.String)">
            <summary>
            获取自定义缓存
            </summary>
            <typeparam name="T">缓存类型</typeparam>
            <param name="key">缓存key</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.RemoveCustomerCache(System.String)">
            <summary>
            移除自定义缓存
            </summary>
            <param name="key">缓存key</param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1">
            <summary>
            临时操作类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.currUser">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.#ctor(Rookey.Frame.Base.UserInfo)">
            <summary>
            构造函数
            </summary>
            <param name="userInfo">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.SetModelForeignNameFieldValue(`0,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            设置实体所有外键字段的TitleKey字段的值或导航属性值
            </summary>
            <param name="t">实体对象</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.SetModelListForeignNameFieldValue(System.Collections.Generic.List{`0},System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            设置实体集合的对象的外键字段的TitleKey字段的值或导航属性值
            </summary>
            <param name="ts">实体对象集合</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetEntityById(System.Guid,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取实体记录
            </summary>
            <param name="id">记录Id</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取实体记录
            </summary>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetEntities(System.String@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取实体记录集合 
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序排列</param>
            <param name="top">取前几条记录</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetPageEntities(System.String@,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取实体分页记录
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="pageInfo">分页信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>返回实体集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetEntitiesByField(System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            根据字段获取实体记录集合
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="top">加载前多少条记录</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetEntitiesByFieldOne(System.String,System.Object,System.String@,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean},System.Collections.Generic.List{System.String},System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            根据字段获取单条记录
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="orderFields">排序字段</param>
            <param name="isDescs">是否降序</param>
            <param name="fieldNames">要查询的字段集合</param>
            <param name="references">是否加载关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.Count(System.String@,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取实体记录数
            </summary>
            <param name="errMsg">错误信息</param>
            <param name="permissionFilter">是否进行权限过滤</param>
            <param name="expression">条件表达式</param>
            <param name="whereSql">SQL条件语句</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.LoadReferences(`0,System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            加载实体对象的关联对象（导航属性）
            </summary>
            <param name="instance">实体对象</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.LoadListReferences(System.Collections.Generic.List{`0},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            加载关联对象（导航属性）
            </summary>
            <param name="instances">实体对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.OperateRecord(`0,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            操作单条记录
            </summary>
            <param name="t">实体对象</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="fieldNames">更新时用到，要更新的字段</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns>如果是新增返回新增后记录Id,否则成功返回1，失败返回0</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.OperateRecords(System.Collections.Generic.List{`0},Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            操作记录集合
            </summary>
            <param name="ts">记录集合</param>
            <param name="operateType">操作类型</param>
            <param name="errMsg">异常信息</param>
            <param name="permissionValidate">是否进行权限验证，针对编辑删除</param>
            <param name="references">是否保存关联对象数据（导航属性）</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns>返回更新结果</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.UpdateRecordsByExpression(System.Object,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            根据条件表达式更新记录
             UpdateEntityByExpression(new { FirstName = "JJ" }, p => p.LastName == "Hendrix");
             UPDATE "Person" SET "FirstName" = 'JJ' WHERE ("LastName" = 'Hendrix')
            </summary>
            <param name="obj">要更新的值对象</param>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.DeleteRecords(System.Collections.IEnumerable,System.String@,System.Boolean,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            删除记录
            </summary>
            <param name="ids">id集合</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="permissionValidate">是否进行权限验证，针对硬删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.DeleteRecordsByExpression(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String@,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Data.IDbConnection)">
            <summary>
            根据条件删除记录
            </summary>
            <param name="expression">条件表达式</param>
            <param name="errMsg">异常信息</param>
            <param name="isSoftDel">是否软删除</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="transConn">事务连接对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetTreeNode(System.Nullable{System.Guid},System.Action{`0,Rookey.Frame.Operate.Base.TempModel.TreeAttributes},System.String,System.String,System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Boolean)">
            <summary>
            获取树结点
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="attributeParams">扩展属性处理方法</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="textName">节点显示字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="icon">图标类</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="isAsync">是否异步方式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetAllChildNodesData(System.Nullable{System.Guid},System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType},System.Boolean)">
            <summary>
            获取树结构模块所有的子结点记录
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <param name="isAsync">是否异步方式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetChildNodesData(System.Nullable{System.Guid},System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            获取树结构模块直接子结点记录
            </summary>
            <param name="parentId">父记录Id</param>
            <param name="pIdFieldName">父Id字段名</param>
            <param name="sortField">排序字段名</param>
            <param name="expression">过滤表达式</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ExecuteTransaction(System.Collections.Generic.List{Rookey.Frame.Common.Model.TransactionModel{`0}},System.String@,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            执行事务
            </summary>
            <param name="transactionObjects">事务对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetQueryCondition(System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取Lamda表达式的查询条件
            </summary>
            <param name="conditionItems">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetQueryConditionDic(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取查询条件
            </summary>
            <param name="dicCondition">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetGridFilterCondition(System.String@,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Guid})">
            <summary>
            返回网格过滤条件
            </summary>
            <param name="whereSql">过滤条件语句</param>
            <param name="q">搜索条件</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件参数</param>
            <param name="initModule">原始模块（弹出选择外键模块数据的初始模块），弹出列表用到</param>
            <param name="initField">原始字段（弹出选择外键模块数据的初始字段），弹出列表用到</param>
            <param name="otherParams">其他参数</param>
            <param name="viewId">当前网格视图Id</param>
            <returns>返回条件表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ConditionMerge(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <summary>
            条件表达式合并，返回合并后的表达式
            </summary>
            <param name="expression1">lamda表达式１</param>
            <param name="expression2">lamda表达式２</param>
            <param name="isAnd">是否用And合并，否则用Or</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetWhereSqlByCondition(System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem},System.Nullable{System.Guid})">
            <summary>
            根据条件集合生成where条件语句
            </summary>
            <param name="items">条件集合</param>
            <param name="viewId">综合视图时，视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ExpressionConditionToWhereSql(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            将条件表达式转成where Sql语句
            </summary>
            <param name="expression">条件表达式</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.GetFormData(System.Guid,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.String@)">
            <summary>
            取表单数据
            </summary>
            <param name="id">记录Id</param>
            <param name="formType">表单类型</param>
            <param name="errMsg">异常信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ClearCache">
            <summary>
            清除当前模块缓存
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.CreateTable(System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            创建数据表
            </summary>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>创建成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.DropTable(System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除数据表
            </summary>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>删除成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.AlterTable(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改数据表
            </summary>
            <param name="command">操作sql，如：[ALTER TABLE a] ADD Column b int</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ColumnIsExists(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            数据列是否存在
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.AddColumn(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            增加数据列
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.AlterColumn(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改数据列
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.ChangeColumnName(System.String,System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            修改列名
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="oldFieldName">旧的字段名</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.DropColumn(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除列
            </summary>
            <param name="columnName">列名</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.CreateIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            创建索引
            </summary>
            <param name="field">字段</param>
            <param name="indexName">索引名</param>
            <param name="unique">是否唯一索引</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.CommonOperate.TempOperate`1.DropIndex(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            删除索引
            </summary>
            <param name="indexName">索引名称</param>
            <param name="connString">数据库连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum">
            <summary>
            字段权限类型
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum.ViewField">
            <summary>
            字段查看
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum.AddField">
            <summary>
            字段新增
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum.EditField">
            <summary>
            字段编辑
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum">
            <summary>
            数据权限类型
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum.ViewData">
            <summary>
            数据查看
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum.EditData">
            <summary>
            数据编辑
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum.DelData">
            <summary>
            数据删除
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.EnumDef.DataGridType">
            <summary>
            数据网格类型
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.MainGrid">
            <summary>
            主网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.DialogGrid">
            <summary>
            弹出选择网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.EditDetailGrid">
            <summary>
            编辑页面明细网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.ViewDetailGrid">
            <summary>
            查看页面明细网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.InnerDetailGrid">
            <summary>
            网格内明细网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.FlowGrid">
            <summary>
            主网格下方网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.RecycleGrid">
            <summary>
            回收站网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.MyDraftGrid">
            <summary>
            我的草稿网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.DesktopGrid">
            <summary>
            桌面配置网格
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.DataGridType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType">
            <summary>
            按钮图标类型
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.SaveAndNew">
            <summary>
            保存并新增
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.SaveDraft">
            <summary>
            保存为草稿
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.DraftRelease">
            <summary>
            保存并发布
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.FlowAgree">
            <summary>
            审批同意
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.FlowReject">
            <summary>
            审批拒绝
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.FlowReturn">
            <summary>
            审批回退
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.FlowDirect">
            <summary>
            审批指派
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.FlowObsoleted">
            <summary>
            审批作废
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.ButtonIconType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.InitFactory">
            <summary>
            初始化工厂类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.GetInstance">
            <summary>
            获取实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.App_Start(System.Web.HttpApplicationState)">
            <summary>
            应用程序启动事件
            </summary>
            <param name="application">应用程序对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.App_End(System.Web.HttpApplication)">
            <summary>
            应用程序结束事件
            </summary>
            <param name="application">应用程序对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.CustomerInit">
            <summary>
            自定义初始化，包括菜单、模块、字段、字典等数据初始化
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.GetDesktopPageUrl(Rookey.Frame.Base.UserInfo)">
            <summary>
            获取自定义桌面URL
            </summary>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.InitFactory.AddBackgroundTask">
            <summary>
            添加自定义后台任务
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.LogOperate">
            <summary>
            日志操作
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.LogOperate.AddOperateLog(Rookey.Frame.Base.UserInfo,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            添加操作日志
            </summary>
            <param name="operateUser">操作用户</param>
            <param name="moduleName">模块名称</param>
            <param name="opType">操作类型，如新增、修改、删除等</param>
            <param name="opContent">操作内容</param>
            <param name="IsOpSuccess">是否成功</param>
            <param name="opErrMsg">操作异常信息</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.LogOperate.AddOperateLog(Rookey.Frame.Base.UserInfo,System.Guid,System.String,System.String,System.Boolean,System.String)">
            <summary>
            添加操作日志
            </summary>
            <param name="operateUser">操作用户</param>
            <param name="moduleId">模块Id</param>
            <param name="opType">操作类型，如新增、修改、删除等</param>
            <param name="opContent">操作内容</param>
            <param name="IsOpSuccess">是否成功</param>
            <param name="opErrMsg">操作异常信息</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.LogOperate.AddExceptionLog(System.Exception,System.String,System.String,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            添加异常日志
            </summary>
            <param name="ex">异常对象</param>
            <param name="paramObj">参数</param>
            <param name="controlOrClass">控制器或类名</param>
            <param name="actionName">方法名</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.MonitorOperate">
            <summary>
            系统监控操作
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IModelOperateHandle`1">
            <summary>
            操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IModelOperateHandle`1.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,`0,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            单个实体操作完成后的处理，针对新增保存后、删除后、修改保存后
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">实体对象</param>
            <param name="result">操作结果，成功或失败</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IModelOperateHandle`1.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,`0,System.String@,System.Object[])">
            <summary>
            单个实体操作前验证或处理，针对新增保存前、删除前、修改保存前
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">操作对象</param>
            <param name="errMsg">错误信息</param>
            <param name="otherParams">其他参数</param>
            <returns>是否通过验证</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IModelOperateHandle`1.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{`0},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            多个实体操作完成后的处理，针对新增保存后、删除后、修改保存后
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">实体记录集合</param>
            <param name="result">操作结果，成功或失败</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IModelOperateHandle`1.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{`0},System.String@,System.Object[])">
            <summary>
            多个实体操作前验证或处理，针对新增保存前、删除前、修改保存前
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">操作对象集合</param>
            <param name="errMsg">错误信息</param>
            <param name="otherParams">其他参数</param>
            <returns>是否通过验证</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkFlowOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Bpm.Bpm_WorkFlow,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作后处理，流程删除后删除对应的流程结点和流程连线
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkFlowOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Bpm.Bpm_WorkFlow,System.String@,System.Object[])">
            <summary>
            操作前验证，如果流程已经在运行则不能删除
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkFlowOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Bpm.Bpm_WorkFlow},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            集合操作完成后事件
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkFlowOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Bpm.Bpm_WorkFlow},System.String@,System.Object[])">
            <summary>
            操作前验证
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle">
            <summary>
            待办任务权限过滤
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1">
            <summary>
            网格相关操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType">网格类型</param>
            <param name="gridParams">网格参数对象</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module">模块</param>
            <param name="gridDataParams">数据加载参数</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1.PageGridDataHandle(System.Collections.Generic.List{`0},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            返回分页网格数据前对数据处理
            </summary>
            <param name="data">处理前的网格数据</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回网格过滤条件
            </summary>
            <param name="where">where条件语句</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件参数</param>
            <param name="initModule">原始模块（弹出选择外键模块数据的初始模块），弹出列表用到</param>
            <param name="initField">原始字段（弹出选择外键模块数据的初始字段），弹出列表用到</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns>返回条件表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridOperateHandle`1.GridButtonOperateVerify(System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格按钮操作验证
            </summary>
            <param name="buttonText">按钮显示名称</param>
            <param name="ids">操作的记录Id集合</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IGridSearchHandle`1">
            <summary>
            网格搜索接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridSearchHandle`1.GetSeachResults(System.Collections.Generic.Dictionary{System.String,System.String},System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写多字段搜索结果
            </summary>
            <param name="q">搜索键值对</param>
            <param name="whereSql">过滤条件语句</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IGridSearchHandle`1.GetSearchResult(System.String,System.Object,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写单字段搜索结果
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="value">字段值</param>
            <param name="whereSql">过滤条件语句</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType"></param>
            <param name="gridParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module"></param>
            <param name="gridDataParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle.PageGridDataHandle(System.Collections.Generic.List{Rookey.Frame.Model.Bpm.Bpm_WorkToDoList},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据处理
            </summary>
            <param name="data"></param>
            <param name="otherParams"></param>
            <param name="currUser"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取网格过滤条件
            </summary>
            <param name="where"></param>
            <param name="gridType"></param>
            <param name="condition"></param>
            <param name="initModule"></param>
            <param name="initField"></param>
            <param name="otherParams"></param>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Bpm_WorkToDoListOperateHandle.GridButtonOperateVerify(System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网络按钮验证
            </summary>
            <param name="buttonText"></param>
            <param name="ids"></param>
            <param name="otherParams"></param>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_DeptOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_Dept,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            部门操作完成
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_DeptOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_Dept,System.String@,System.Object[])">
            <summary>
            操作前处理
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_DeptOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_Dept},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作后处理
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_DeptOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_Dept},System.String@,System.Object[])">
            <summary>
            操作前处理
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpDeptDutyOperateHandle">
            <summary>
            员工岗位操作类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpDeptDutyOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_EmpDeptDuty,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作完成后
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpDeptDutyOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_EmpDeptDuty,System.String@,System.Object[])">
            <summary>
            操作前验证
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpDeptDutyOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_EmpDeptDuty},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作完成后
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpDeptDutyOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_EmpDeptDuty},System.String@,System.Object[])">
            <summary>
            操作前验证
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle">
            <summary>
            员工操作处理类
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1">
            <summary>
            表单操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1.FormDataHandle(`0,Rookey.Frame.Model.EnumSpace.FormTypeEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            返回表单数据前对表单数据进行处理
            </summary>
            <param name="t">实体对象</param>
            <param name="formType">表单类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1.GetFormButtons(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormButton},System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            取表单页面按钮
            </summary>
            <param name="formType">表单类型</param>
            <param name="buttons">原有表单按钮</param>
            <param name="isAdd">是否新增页面</param>
            <param name="isDraft">是否草稿</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1.GetFormToolTags(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormToolTag},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单工具标签按钮集合
            </summary>
            <param name="formType">表单类型</param>
            <param name="tags">tags</param>
            <param name="isAdd">是否新增页面</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1.GetAutoCompleteDisplay(`0,System.String,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            获取智能提示下拉面板显示值，各模块通过重写此方法可以任意设置下拉显示格式
            </summary>
            <param name="t">实体对象</param>
            <param name="initModule">针对编辑表单时，原始模块</param>
            <param name="initField">针对编辑表单时，原始字段</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFormOperateHandle`1.OverSaveDetailData(Rookey.Frame.Operate.Base.TempModel.DetailFormObject,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写表单明细保存数据
            </summary>
            <param name="detailObj">明细表单数据对象</param>
            <param name="errMsg">异常信息</param>
            <param name="currUser">当前用户</param>
            <returns>返回是否执行了自定义明细保存方法</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_Emp,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            员工操作完成
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">员工对象</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.OrgM.OrgM_Emp,System.String@,System.Object[])">
            <summary>
            员工操作前验证
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">操作对象</param>
            <param name="errMsg">异常信息</param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_Emp},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            批量操作完成后事件
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser">当前用户</param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_Emp},System.String@,System.Object[])">
            <summary>
            批量操作前验证事件
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数重写
            </summary>
            <param name="gridType">网格类型</param>
            <param name="gridParams">网格参数</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数重写
            </summary>
            <param name="module">模块</param>
            <param name="gridDataParams">数据加载参数</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.PageGridDataHandle(System.Collections.Generic.List{Rookey.Frame.Model.OrgM.OrgM_Emp},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据处理
            </summary>
            <param name="data">数据</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            网格条件过滤
            </summary>
            <param name="where">where</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件</param>
            <param name="initModule">原始模块，针对表单弹出框</param>
            <param name="initField">原始字段，针对表单弹出框</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GridButtonOperateVerify(System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            操作按钮验证
            </summary>
            <param name="buttonText">按钮Text</param>
            <param name="ids">操作ID集合</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.FormDataHandle(Rookey.Frame.Model.OrgM.OrgM_Emp,Rookey.Frame.Model.EnumSpace.FormTypeEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            表单数据处理
            </summary>
            <param name="t">对象</param>
            <param name="formType">表单类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GetFormButtons(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormButton},System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单按钮
            </summary>
            <param name="formType"></param>
            <param name="buttons"></param>
            <param name="isAdd"></param>
            <param name="isDraft"></param>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GetFormToolTags(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormToolTag},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单tags
            </summary>
            <param name="formType"></param>
            <param name="tags"></param>
            <param name="isAdd"></param>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.GetAutoCompleteDisplay(Rookey.Frame.Model.OrgM.OrgM_Emp,System.String,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            获取智能提示模板
            </summary>
            <param name="t"></param>
            <param name="initModule"></param>
            <param name="initField"></param>
            <param name="otherParams"></param>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.OrgM_EmpOperateHandle.OverSaveDetailData(Rookey.Frame.Operate.Base.TempModel.DetailFormObject,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            自定义保存明细数据
            </summary>
            <param name="detailObj"></param>
            <param name="errMsg"></param>
            <param name="currUser"></param>
            <returns>返回是否执行了明细保存</returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_DbConfigOperateHandle">
            <summary>
            数据库配置操作处理类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_DbConfigOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module"></param>
            <param name="gridDataParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_Field,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            字段操作完成后
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">字段对象</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_Field,System.String@,System.Object[])">
            <summary>
            操作前事件
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">对象</param>
            <param name="errMsg">异常信息</param>
            <param name="otherParams">其他参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Field},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            字段操作完成后
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">操作对象集合</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Field},System.String@,System.Object[])">
            <summary>
            操作前事件
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="otherParams">其他参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType">网格类型</param>
            <param name="gridParams">网格参数对象</param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module"></param>
            <param name="gridDataParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.PageGridDataHandle(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Field},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据处理
            </summary>
            <param name="data">数据集合</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据过滤条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GridButtonOperateVerify(System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格按钮操作前验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.FormDataHandle(Rookey.Frame.Model.Sys.Sys_Field,Rookey.Frame.Model.EnumSpace.FormTypeEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            表单数据处理
            </summary>
            <param name="t">对象</param>
            <param name="formType">表单类型</param>
            <param name="currUser"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GetFormButtons(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormButton},System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GetFormToolTags(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormToolTag},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单工具标签项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.GetAutoCompleteDisplay(Rookey.Frame.Model.Sys.Sys_Field,System.String,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单自动完成显示格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FieldOperateHandle.OverSaveDetailData(Rookey.Frame.Operate.Base.TempModel.DetailFormObject,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            是否重写保存明细
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FormFieldOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_FormField,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            保存后
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FormFieldOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_FormField,System.String@,System.Object[])">
            <summary>
            保存前
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FormFieldOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_FormField},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            保存后
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_FormFieldOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_FormField},System.String@,System.Object[])">
            <summary>
            保存前
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_GridFieldOperateHandle">
            <summary>
            列表字段操作处理类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_GridFieldOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_GridField,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作完成
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_GridFieldOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_GridField,System.String@,System.Object[])">
            <summary>
            操作前
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_GridFieldOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_GridField},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作完成
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_GridFieldOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_GridField},System.String@,System.Object[])">
            <summary>
            操作前
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle">
            <summary>
            模块操作处理
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1">
            <summary>
            UI绘制接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetGridHTML(Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Collections.Generic.List{System.String},System.Nullable{System.Guid},System.Boolean,System.Web.HttpRequestBase)">
            <summary>
            返回网格页面HTML
            </summary>
            <param name="gridType">网格类型</param>
            <param name="condition">过滤条件</param>
            <param name="where">where过滤条件</param>
            <param name="viewId">视图Id</param>
            <param name="initModule">针对表单弹出外键选择框，表单原始模块</param>
            <param name="initField">针对表单外键弹出框，表单原始字段</param>
            <param name="otherParams">其他参数</param>
            <param name="detailCopy">明细复制</param>
            <param name="filterFields">过滤字段</param>
            <param name="menuId">菜单ID，从哪个菜单进来的</param>
            <param name="isGridLeftTree">是否网格左侧树，针对附属网格</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetSimpleSearchHTML(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_GridField},Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.Web.HttpRequestBase)">
            <summary>
            获取简单搜索HTML
            </summary>
            <param name="searchFields">可搜索字段</param>
            <param name="gridType">网格类型</param>
            <param name="condition">过滤条件</param>
            <param name="where">where过滤条件</param>
            <param name="viewId">视图Id</param>
            <param name="initModule">针对表单弹出外键选择框，表单原始模块</param>
            <param name="initField">针对表单外键弹出框，表单原始字段</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetEditFormHTML(System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取编辑表单HTML
            </summary>
            <param name="id">记录Id</param>
            <param name="gridId">为网格表单编辑模式的网格Id</param>
            <param name="copyId">复制时被复制的记录Id</param>
            <param name="showTip">是否显示表单tip按钮</param>
            <param name="todoTaskId">待办任务ID</param>
            <param name="formId">指定表单ID</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetEditDetailHTML(System.Nullable{System.Guid},System.Boolean@,System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取编辑表单明细编辑网格HTML
            </summary>
            <param name="id">记录ID</param>
            <param name="detailTopDisplay">明细是否顶部显示</param>
            <param name="copyId">复制记录ID</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetViewFormHTML(System.Guid,System.String,System.String,System.Boolean,System.Boolean,System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取查看表单HTML
            </summary>
            <param name="id">记录Id</param>
            <param name="gridId">为网格表单查看模式的网格Id</param>
            <param name="fromEditPageFlag">从编辑页面点击查看按钮标识</param>
            <param name="isRecycle">是否来自回收站</param>
            <param name="showTip">是否显示表单tip按钮</param>
            <param name="formId">指定表单ID</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIDrawHandle`1.GetViewDetailHTML(System.Nullable{System.Guid},System.Boolean@,System.Web.HttpRequestBase)">
            <summary>
            获取查看表单明细查看网格HTML
            </summary>
            <param name="id">记录ID</param>
            <param name="detailTopDisplay">明细是否顶部显示</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_Module,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            模块操作完成后
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_Module,System.String@,System.Object[])">
            <summary>
            模块操作前处理
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Module},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            模块集合操作完成后
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Module},System.String@,System.Object[])">
            <summary>
            模块集合操作完成前
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType"></param>
            <param name="gridParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module"></param>
            <param name="gridDataParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.PageGridDataHandle(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Module},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据处理
            </summary>
            <param name="data">数据</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            网格条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_ModuleOperateHandle.GridButtonOperateVerify(System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格按钮操作验证
            </summary>
            <param name="buttonText">按钮显示名称</param>
            <param name="ids">操作记录id集合</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.ITreeOperateHandle`1">
            <summary>
            树操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.ITreeOperateHandle`1.TreeNodeHandle(Rookey.Frame.Operate.Base.TempModel.TreeNode)">
            <summary>
            树节点处理
            </summary>
            <param name="node">节点对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.ITreeOperateHandle`1.ChildNodesDataHandler(System.Collections.Generic.List{`0},Rookey.Frame.Base.UserInfo)">
            <summary>
            树子节点集合处理
            </summary>
            <param name="childDatas">所有子结点数据</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_SystemSetOperateHandle">
            <summary>
            参数设定操作处理
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_SystemSetOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_SystemSet,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作后处理
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_SystemSetOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_SystemSet,System.String@,System.Object[])">
            <summary>
            操作前处理
            </summary>
            <param name="operateType"></param>
            <param name="t"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_SystemSetOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_SystemSet},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            操作后处理
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="result"></param>
            <param name="currUser"></param>
            <param name="otherParams"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_SystemSetOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_SystemSet},System.String@,System.Object[])">
            <summary>
            操作前处理
            </summary>
            <param name="operateType"></param>
            <param name="ts"></param>
            <param name="errMsg"></param>
            <param name="otherParams"></param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_UserOperateHandle">
            <summary>
            用户操作事件处理
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_UserOperateHandle.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_User,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            单个用户操作完成后
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">用户对象</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_UserOperateHandle.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Model.Sys.Sys_User,System.String@,System.Object[])">
            <summary>
            操作前验证
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">用户对象</param>
            <param name="errMsg">异常信息</param>
            <param name="otherParams">其他参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_UserOperateHandle.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_User},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            用户集合操作完成后事件
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">用户对象集合</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_UserOperateHandle.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_User},System.String@,System.Object[])">
            <summary>
            操作前验证
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">用户对象集合</param>
            <param name="errMsg">异常信息</param>
            <param name="otherParams">其他参数</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OrgMOperate">
            <summary>
            组织机构操作
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetAllDepts(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Dept,System.Boolean}})">
            <summary>
            获取所有部门
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptRoot(System.Nullable{System.Guid})">
            <summary>
            获取部门根结点
            </summary>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetChargeDepts">
            <summary>
            获取所有的分管部门，公司下的一级部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptById(System.Guid)">
            <summary>
            根据部门ID获取部门信息
            </summary>
            <param name="deptId">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptByCode(System.String)">
            <summary>
            根据部门编码获取部门信息
            </summary>
            <param name="deptCode">部门编码</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptByName(System.String)">
            <summary>
            根据部门名称获取部门信息
            </summary>
            <param name="deptName">部门名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetLevelDepthDepts(System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取层级部门，第一层级、第二层级、...，最多5层
            </summary>
            <param name="levelDepth">层级，小于等于5</param>
            <param name="deptId">当前部门ID</param>
            <param name="companyId">公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpLevelDepthDept(System.Int32,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取员工的层级部门，第一层级、第二层级、...，最多5层
            </summary>
            <param name="levelDepth">层级，小于等于5</param>
            <param name="empId">员工ID</param>
            <param name="companyId">公司ID</param>
            <param name="deptId">找兼职部门时，要传兼职部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentDept(System.Guid)">
            <summary>
            获取部门的父部门
            </summary>
            <param name="deptId">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentDeptByCode(System.String)">
            <summary>
            获取部门的父部门
            </summary>
            <param name="deptCode">部门编码</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentDeptByName(System.String)">
            <summary>
            获取部门的父部门
            </summary>
            <param name="deptName">部门名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentsDepts(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取所有父级部门
            </summary>
            <param name="deptId">部门ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetCurrChargeDept(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取当前部门的分管部门
            </summary>
            <param name="deptId">部门ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetChildDepts(System.Guid,System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Dept,System.Boolean}})">
            <summary>
            获取子部门
            </summary>
            <param name="parentDeptId">父级部门ID</param>
            <param name="isDirect">是否直接子部门，否则取所有子级部门</param>
            <param name="expression">过滤表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.LoadDeptTree(System.Nullable{System.Guid},System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Dept,System.Boolean}},System.Boolean)">
            <summary>
            加载部门树
            </summary>
            <param name="deptId">部门根节点Id，为空是加载整棵树</param>
            <param name="expression">条件过滤表达式</param>
            <param name="isAsync">是否异步加载</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptPositions(System.Guid)">
            <summary>
            获取部门岗位
            </summary>
            <param name="deptId">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptDutys(System.Guid)">
            <summary>
            获取部门所有职务
            </summary>
            <param name="deptId">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptEmps(System.Guid,System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Emp,System.Boolean}})">
            <summary>
            获取部门人员
            </summary>
            <param name="deptId">部门Id</param>
            <param name="isDirect">是否取直接部门下人员,为否时包含子部门下人员</param>
            <param name="expression">过滤表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDeptLeader(System.Guid)">
            <summary>
            获取部门负责人，部门leader
            </summary>
            <param name="deptId">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetNoDeptEmps(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Emp,System.Boolean}})">
            <summary>
            获取没有部门的员工
            </summary>
            <param name="expression">过滤表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetAllDutys(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Duty,System.Boolean}})">
            <summary>
            获取所有职务信息
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDuty(System.Guid)">
            <summary>
            获取职务
            </summary>
            <param name="dutyId">职务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetDutyEmps(System.Guid)">
            <summary>
            获取职务人员
            </summary>
            <param name="dutyId">职务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetAllPositions(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_DeptDuty,System.Boolean}})">
            <summary>
            获取所有岗位信息
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetPositionRoot(System.Nullable{System.Guid})">
            <summary>
            获取岗位根结点
            </summary>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetPosition(System.Guid)">
            <summary>
            获取岗位信息
            </summary>
            <param name="positionId"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentPosition(System.Guid)">
            <summary>
            获取上级岗位
            </summary>
            <param name="positionId">岗位ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetParentPosition(System.Guid,System.Guid)">
            <summary>
            获取上级岗位
            </summary>
            <param name="deptId">部门ID</param>
            <param name="dutyId">职务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetChildPositions(System.Guid,System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_DeptDuty,System.Boolean}})">
            <summary>
            获取子岗位
            </summary>
            <param name="parentId">父岗位ID</param>
            <param name="isDirect">是否直接子岗位，否则获取所有下级岗位</param>
            <param name="expression">过滤表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.LoadPositionTree(System.Nullable{System.Guid},System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_DeptDuty,System.Boolean}},System.Boolean)">
            <summary>
            加载岗位树
            </summary>
            <param name="positionId">岗位根结点Id，为空时加载整棵树</param>
            <param name="expression">岗位过滤表达式</param>
            <param name="isAsync">是否异步加载</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.LoadDeptPositionTree(System.Nullable{System.Guid})">
            <summary>
            加载部门岗位树
            </summary>
            <param name="deptId">部门根结点ID，为空是加载整棵树</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetPositionEmps(System.Guid,System.Guid)">
            <summary>
            获取岗位人员
            </summary>
            <param name="deptId">部门ID</param>
            <param name="dutyId">职务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetPositionEmps(System.Guid)">
            <summary>
            获取岗位人员
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetAllEmps(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Emp,System.Boolean}})">
            <summary>
            获取所有员工，只包含在职员工
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmp(System.Guid)">
            <summary>
            获取员工信息
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpContainsQuit(System.Guid)">
            <summary>
            获取员工信息，包含离职人员
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByCode(System.String)">
            <summary>
            根据员工编号获取员工信息
            </summary>
            <param name="empCode">员工编号</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpNameByCode(System.String)">
            <summary>
            获取员工姓名
            </summary>
            <param name="empCode">员工编号</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpName(System.Guid)">
            <summary>
            获取员工姓名
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpNameContainsQuit(System.Guid)">
            <summary>
            获取员工姓名，包含离职人员
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByMobile(System.String)">
            <summary>
            根据手机号获取员工信息
            </summary>
            <param name="mobile">手机号</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByEmail(System.String)">
            <summary>
            根据邮箱获取员工信息
            </summary>
            <param name="email">邮箱</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByEmailPrex(System.String)">
            <summary>
            根据邮箱前缀获取员工信息
            </summary>
            <param name="emailPrex">邮箱前缀</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetAllEmpPositions(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_EmpDeptDuty,System.Boolean}})">
            <summary>
            获取所有员工岗位
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpPositions(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工岗位，包含兼职
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpMainPosition(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工主职岗位
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpPartTimePosition(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工兼职岗位集合
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetPartTimePositions(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工兼职岗位集合
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpDutys(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工职务，包含兼职
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpMainDuty(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工主职职务
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpPartTimeDutys(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工兼职职务集合
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpDepts(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工所属部门，包括兼职部门
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpMainDept(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工主职部门
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpMainDeptName(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工部门显示名称（部门简称）
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpPartTimeDepts(System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取员工兼职部门
            </summary>
            <param name="empId">员工ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpCompanys(System.Guid)">
            <summary>
            获取员工所属公司
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Rookey.Frame.Operate.Base.OrgMOperate.LoadDeptEmpTree(System.Nullable{System.Guid},System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.OrgM.OrgM_Emp,System.Boolean}})”忽略有格式错误的 XML 注释 -->
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpParentEmp(System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取员工上级人员
            </summary>
            <param name="empId">员工ID</param>
            <param name="deptId">针对有兼职的员工需要传部门ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpChildsEmps(System.Guid,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取员工下级人员
            </summary>
            <param name="empId">员工ID</param>
            <param name="isDirect">是否直接下属，否则所有下属</param>
            <param name="deptId">针对有兼职的员工需要传部门ID，否则取所有</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpChildUserIds(System.Guid,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取员工下级人员用户ID集合
            </summary>
            <param name="empId">员工ID</param>
            <param name="isDirect">是否直接下属，否则所有下属</param>
            <param name="deptId">针对有兼职的员工需要传部门ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpChargeLeader(System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            获取员工的部门负责人
            </summary>
            <param name="empId">员工ID</param>
            <param name="deptId">针对有兼职的员工需要传部门ID</param>
            <param name="companyId">所属公司ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByUserName(System.String)">
            <summary>
            根据用户名获取员工对象
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpByUserId(System.Guid)">
            <summary>
            根据用户ID获取员工
            </summary>
            <param name="userId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmpsByUserNames(System.Collections.Generic.List{System.String})">
            <summary>
            根据用户名集合获取员工集合
            </summary>
            <param name="usernames">用户名集合，小写</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetUserNameByEmp(Rookey.Frame.Model.OrgM.OrgM_Emp)">
            <summary>
            根据员工信息获取用户名
            </summary>
            <param name="emp">员工信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetUserNameByEmpId(System.Guid)">
            <summary>
            根据员工ID获取用户名
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OrgMOperate.GetUserIdByEmpId(System.Guid)">
            <summary>
            根据员工ID获取用户ID
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Rookey.Frame.Operate.Base.OrgMOperate.GetEmployeeEmails(System.Collections.Generic.List{System.Guid})”忽略有格式错误的 XML 注释 -->
        <member name="T:Rookey.Frame.Operate.Base.PermissionOperate">
            <summary>
            权限操作
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.AddAdminRole">
            <summary>
            添加管理员角色
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetAllRoles(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Role,System.Boolean}})">
            <summary>
            获取所有角色
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRole(System.Guid)">
            <summary>
            获取角色
            </summary>
            <param name="roleId">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRole(System.String)">
            <summary>
            获取角色
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleName(System.Guid)">
            <summary>
            获取角色名称
            </summary>
            <param name="roleId">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetParentRole(System.Guid)">
            <summary>
            获取父角色
            </summary>
            <param name="roleId">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetParentsRole(System.Guid)">
            <summary>
            获取所有祖宗角色，包含父角色，祖父角色，。。
            </summary>
            <param name="roleId">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetChildRoles(System.Nullable{System.Guid},System.Boolean)">
            <summary>
            获取所有子角色
            </summary>
            <param name="parentRoleId">根结点角色Id</param>
            <param name="isDirect">是否直接子结点</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetAllSubordinateStaffRoles(System.Guid)">
            <summary>
            获取当前人所有下级员工角色集合
            </summary>
            <param name="userId">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserRoles(System.Guid,System.Boolean)">
            <summary>
            获取用户角色，包含父角色
            </summary>
            <param name="userId">用户Id</param>
            <param name="isContainChild">是否包含下级角色</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetAllUserRoles(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_UserRole,System.Boolean}})">
            <summary>
            获取所有用户角色
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleUserIds(System.Guid)">
            <summary>
            获取角色用户ID集合
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleUsers(System.Guid)">
            <summary>
            获取角色的所有用户集合
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserIdsOfRole(System.Guid)">
            <summary>
            获取角色用户ID集合
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserFunPermissions(System.Guid,Rookey.Frame.Model.EnumSpace.FunctionTypeEnum,System.Nullable{System.Guid})">
            <summary>
            获取用户的功能（菜单或网格按钮）权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="functionType">功能类型（菜单、网格按钮）</param>
            <param name="moduleId">模块ID，针对按钮权限需要传递</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserFunPermissions(Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.EnumSpace.FunctionTypeEnum,System.Nullable{System.Guid})">
            <summary>
            获取用户的功能（菜单或网格按钮）权限
            </summary>
            <param name="currUser">当前用户</param>
            <param name="functionType">功能类型（菜单、网格按钮）</param>
            <param name="moduleId">模块ID，针对按钮权限需要传递</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleFunPermissions(Rookey.Frame.Base.UserInfo,System.Guid,Rookey.Frame.Model.EnumSpace.FunctionTypeEnum,System.Nullable{System.Guid})">
            <summary>
            获取角色功能权限，子角色默认继承父角色的所有权限，当前返回字典，
            字典第一个参数为功能Id（菜单或按钮Id）,第二个参数为是否该功能Id继承父角色，
            非当前角色所有
            </summary>
            <param name="currUser">当前用户</param>
            <param name="roleId">角色Id</param>
            <param name="functionType">功能类型，菜单或网格按钮</param>
            <param name="moduleId">模块ID，针对按钮权限需要传递</param>
            <returns>返回功能Id、是否来自父角色的权限字典</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasMenuPermission(System.Guid,System.Guid)">
            <summary>
            某个用户是否有某菜单权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="menuId">菜单Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasMenuPermission(Rookey.Frame.Base.UserInfo,System.Guid)">
            <summary>
            某个用户是否有某菜单权限
            </summary>
            <param name="currUser">当前用户</param>
            <param name="menuId">菜单Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasModuleBrowerPermission(System.Guid,System.Guid)">
            <summary>
            某用户是否有某个模块的列表页面浏览权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasModuleBrowerPermission(Rookey.Frame.Base.UserInfo,System.Guid)">
            <summary>
            某用户是否有某个模块的列表页面浏览权限
            </summary>
            <param name="currUser">当前用户</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasButtonPermission(Rookey.Frame.Base.UserInfo,System.Guid,System.Nullable{System.Guid})">
            <summary>
            某用户是否有某按钮权限
            </summary>
            <param name="currUser">当前用户</param>
            <param name="btnId">按钮Id</param>
            <param name="moduleId">模块ID，针对按钮权限需要传递</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.HasButtonPermission(Rookey.Frame.Base.UserInfo,System.Guid,System.String)">
            <summary>
            某用户是否有某按钮权限
            </summary>
            <param name="currUser">当前用户</param>
            <param name="moduleId">模块Id</param>
            <param name="buttonText">按钮显示文本</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleFieldPermissions(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum,System.Boolean)">
            <summary>
            获取角色（查看、新增、编辑）字段权限，返回允许（查看、新增、编辑）的字段名字典，
            第一个参数为字段名，第二个参数为是否来自父角色的权限，
            非当前角色权限
            </summary>
            <param name="roleId">角色Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldPermissionType">字段权限类型</param>
            <param name="read">是否为应用读取，应用读取快速返回</param>
            <returns>返回允许（查看、新增、编辑）的字段名字典</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserFieldsPermissions(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum)">
            <summary>
            获取用户（查看、新增、编辑）字段权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldPermissionType">字段权限类型</param>
            <returns>返回允许（查看、新增、编辑）的字段名集合</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.CanViewField(System.Guid,System.Guid,System.String)">
            <summary>
            是否有权限查看某字段
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.CanAddField(System.Guid,System.Guid,System.String)">
            <summary>
            是否有新增某字段的权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetCanOperateFields(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.FieldPermissionTypeEnum)">
            <summary>
            获取有权限操作的字段
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldPermissionType">字段权限类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.CanEditField(System.Guid,System.Guid,System.String)">
            <summary>
            是否有编辑某字段的权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetPermissionExpression(System.Guid,Rookey.Frame.Base.UserInfo,System.String@)">
            <summary>
            获取权限表达式
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="userInfo">用户信息</param>
            <param name="filterWhere">过虑条件SQL</param>
            <returns>返回lamda表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetPermissionExp``1(Rookey.Frame.Base.UserInfo,System.String@)">
            <summary>
            获取权限表达式
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="filterWhere">过虑条件SQL</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.UserHasOperateRecordPermission(System.Guid,System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum)">
            <summary>
            用户是否有操作某条记录的权限
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="id">记录Id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetRoleDataPermissions(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum,System.Boolean)">
            <summary>
            获取角色可（查看、编辑、删除）模块中哪些组织下的数据，返回可（查看、编辑、删除）
            的组织Id集合字典，
            第一个参数为组织Id，第二个参数为是否来自父角色的权限，非当前
            角色的权限
            </summary>
            <param name="roleId">角色Id</param>
            <param name="moduleId">模块Id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <param name="read">是否为应用读取</param>
            <returns>返回组织Id集合字典</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserDataPermissions(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum)">
            <summary>
            获取用户可（查看、编辑、删除）模块中哪些组织下的数据，
            返回可（查看、编辑、删除）的组织Id集合
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <returns>返回组织Id集合字典</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserDataPermissionWhere(System.Guid,System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum)">
            <summary>
            获取用户数据权限条件语句
            </summary>
            <param name="userId">用户id</param>
            <param name="moduleId">模块id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetUserDataPermissionExpression``1(System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum)">
            <summary>
            获取用户数据权限条件表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="userId">用户Id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetCurrentUserDataPermissionWhere(System.Guid,Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum,System.Guid)">
            <summary>
            获取当前用户的数据权限条件语句
            </summary>
            <param name="moduleId">模块id</param>
            <param name="dataPermissionType">数据权限类型</param>
            <param name="userId">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.GetCurrentUserDataPermissionExpression``1(Rookey.Frame.Operate.Base.EnumDef.DataPermissionTypeEnum,System.Guid)">
            <summary>
            获取当前用户数据权限条件表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataPermissionType">数据权限类型</param>
            <param name="userId">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.SaveRolePermission(System.Guid,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.PermissionModel},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            保存角色权限
            </summary>
            <param name="roleId">角色Id</param>
            <param name="permissionModels">权限集合</param>
            <param name="topMenuId">顶部菜单Id</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.PermissionOperate.SaveUserPermission(System.Guid,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.PermissionModel},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            保存用户权限
            </summary>
            <param name="userId">用户ID</param>
            <param name="permissionModels">权限集合</param>
            <param name="topMenuId">顶部菜单ID</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.SystemOperate">
            <summary>
            系统操作类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModules(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Module,System.Boolean}})">
            <summary>
            取模块集合
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleById(System.Guid)">
            <summary>
            通过模块Id获取模块信息
            </summary>
            <param name="moduleId"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleByName(System.String)">
            <summary>
            通过模块名称获取模块信息
            </summary>
            <param name="moduleName">模块名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleByTableName(System.String)">
            <summary>
            根据表名获取模块
            </summary>
            <param name="tableName">实体表名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleIdByTableName(System.String)">
            <summary>
            根据表名获取模块Id
            </summary>
            <param name="tableName">实体表名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleIdByName(System.String)">
            <summary>
            根据模块名称获取模块Id
            </summary>
            <param name="moduleName">模块名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleNameById(System.Guid)">
            <summary>
            根据模块Id获取模块名称
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleDiplay(System.Guid)">
            <summary>
            获取模块显示名称
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTableNameById(System.Guid)">
            <summary>
            获取模块表名
            </summary>
            <param name="moduleId"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTableNameByName(System.String)">
            <summary>
            获取模块表名
            </summary>
            <param name="moduleName">模块名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleByRequest(System.Web.HttpRequestBase)">
            <summary>
            获取模块
            </summary>
            <param name="request">request请求</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleIdByModelType(System.Type)">
            <summary>
            通过实体类型获取模块
            </summary>
            <param name="modelType">实体类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleJsFilePath(System.Guid,System.Boolean)">
            <summary>
            获取模块的Js文件路径
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="isFullPath">是否显示全路径</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleJsFilePath(Rookey.Frame.Model.Sys.Sys_Module,System.Boolean)">
            <summary>
            获取模块的Js文件路径
            </summary>
            <param name="module">模块</param>
            <param name="isFullPath">是否显示全路径</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModule(System.Guid,System.String)">
            <summary>
            取外键字段的外键模块
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModule(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取外键模块
            </summary>
            <param name="field">字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModuleId(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取外键模块Id
            </summary>
            <param name="field">字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModuleName(System.Guid,System.String)">
            <summary>
            获取字段外键模块名称
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns>返回该模块对应的外键模块名称</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModules(System.Guid)">
            <summary>
            获取模块的所有外键模块（除用户管理模块）
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignModules(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            获取模块的所有外键模块（除用户管理模块）
            </summary>
            <param name="module">模块对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetNoRepeatForeignModules(System.Guid)">
            <summary>
            获取模块的所有字段外键模块不重复的外键模块，
            即模块字段中不允许有两个字段是同一个外键模块
            并且不包含用户管理外键模块
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTitleKey(System.String)">
            <summary>
            获取模块的TitleKey
            </summary>
            <param name="moduleName">模块名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTitleKey(System.Guid)">
            <summary>
            获取模块的TitleKey
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTitleKeyDisplay(System.Guid)">
            <summary>
            获取模块的TitleKey的显示名称
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleTitleKeyDisplay(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            获取模块的TitleKey的显示名称
            </summary>
            <param name="module">模块对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModulePrimaryKeyFields(System.Guid)">
            <summary>
            取模块的主键字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsDetailModule(System.Guid)">
            <summary>
            是否为明细模块
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDetailModules(System.Guid)">
            <summary>
            获取所有明细模块
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.HasDetailModule(System.Guid)">
            <summary>
            是否有明细模块
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetParentModule(System.Guid)">
            <summary>
            获取父模块
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetParentModuleId(System.Guid)">
            <summary>
            获取父模块
            </summary>
            <param name="moduleId"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModelType(System.Guid)">
            <summary>
            获取实体类型
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAttachModules(System.Guid)">
            <summary>
            获取模块的附属模块集合
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAttachModuleBind(System.Guid,System.Guid)">
            <summary>
            获取附属模块绑定集合
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserBindAttachModules(System.Guid,System.Guid)">
            <summary>
            取用户绑定的附属模块集合
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserBindAttachModules(System.Guid,System.Guid,System.Boolean)">
            <summary>
            获取用户绑定的附属模块集合
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="isInnerGrid">是否网格内绑定的附属模块</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.HasUserAttachModule(System.Guid,System.Guid,System.Boolean)">
            <summary>
            用户是否绑定了附属模块
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="isInnerGrid">是否网格内绑定的附属模块</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleByViewId(System.Guid)">
            <summary>
            根据视图Id获取模块Id
            </summary>
            <param name="viewId">视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DeleteModuleReferences(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            删除模块相关的数据，删除对应的字段、表单、表单字段、列表、列表字段、列表按钮、字典绑定等信息
            </summary>
            <param name="t">模块对象</param>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.SystemOperate.userMenusCaches">
            <summary>
            用户菜单缓存
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllMenus(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Menu,System.Boolean}},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取所有菜单
            </summary>
            <param name="exp">条件表达式</param>
            <param name="permissionFilter">是否过滤菜单权限</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetTopMenus(System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取顶级菜单
            </summary>
            <param name="permissionFilter">是否需要权限过滤</param>
            <param name="currUser">当前用户，进行菜单权限过滤</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetChildMenus(System.Nullable{System.Guid},System.Boolean,System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            取子菜单
            </summary>
            <param name="menuId">父菜单Id</param>
            <param name="isDirect">是否直接子菜单，否时取所有子菜单</param>
            <param name="detailModuleToAdd">是否将明细模块添加到菜单中，默认为否</param>
            /// <param name="permissionFilter">是否需要权限过滤</param>
            <param name="currUser">当前用户，进行菜单权限过滤</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetMenuOfModule(System.Guid)">
            <summary>
            获取模块对应的菜单
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserQuckMenus(System.Guid)">
            <summary>
            获取用户快捷操作菜单
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllSysFields(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Field,System.Boolean}})">
            <summary>
            获取所有字段
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetPrimaryKeyFields(System.Guid)">
            <summary>
            获取主键字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldById(System.Guid)">
            <summary>
            根据Id获取字段信息
            </summary>
            <param name="id">字段Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFields(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Field,System.Boolean}})">
            <summary>
            获取字段信息
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldInfos(System.Guid)">
            <summary>
            获取模块字段信息
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldInfos(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            获取模块字段信息
            </summary>
            <param name="module">模块对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldInfo(System.Guid,System.String)">
            <summary>
            获取模块的某个字段信息
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldId(System.Guid,System.String)">
            <summary>
            获取字段id
            </summary>
            <param name="moduleId">模块id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldByDisplay(System.Guid,System.String)">
            <summary>
            通过字段显示名称获取字段信息
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="display">显示名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsForeignField(System.Guid,System.String)">
            <summary>
            判断是否为外键字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsForeignField(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            判断是否外键字段
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsForeignNameField(System.Guid,System.String)">
            <summary>
            是否外键Name字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">外键Name字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForeignNameField(Rookey.Frame.Model.Sys.Sys_FormField)">
            <summary>
            获取外键Name字段
            </summary>
            <param name="formField">表单字段对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsEnumField(System.Guid,System.String)">
            <summary>
            是否为枚举字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsEnumField(System.Type,System.String)">
            <summary>
            是否为枚举字段
            </summary>
            <param name="modelType">模块类型</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsDictionaryBindField(System.Guid,System.String)">
            <summary>
            是否字典绑定字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplay(System.Guid)">
            <summary>
            获取字段的显示名称
            </summary>
            <param name="fieldId">字段Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplay(System.Guid,System.String)">
            <summary>
            获取字段的显示名称
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldForeignModuleName(System.Guid)">
            <summary>
            获取字段的外键模块名称
            </summary>
            <param name="fieldId">字段Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldForeignModuleName(System.Guid,System.String)">
            <summary>
            获取字段的外键模块名称
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldType(System.Guid,System.String)">
            <summary>
            获取字段类型
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldType(System.Type,System.String)">
            <summary>
            获取字段类型
            </summary>
            <param name="modelType">实体类型</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldCommonInfo(System.Guid,System.String)">
            <summary>
            获取字段综合信息
            </summary>
            <param name="moduleId"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplayValue(System.Guid,System.Object,Rookey.Frame.Model.Sys.Sys_Field,Rookey.Frame.Model.Sys.Sys_FormField)">
            <summary>
            获取字段显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="sysField">字段信息</param>
            <param name="field">表单字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplayValue(System.Guid,System.Object,Rookey.Frame.Model.Sys.Sys_FormField)">
            <summary>
            获取字段显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="field">表单字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplayValue(System.Guid,System.Guid,System.String)">
            <summary>
            获取字段显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="recordId">记录Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldDisplayValue(System.Guid,System.Object,System.String)">
            <summary>
            获取字段显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="model">实体对象</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllGridFields(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_GridField,System.Boolean}})">
            <summary>
            获取所有视图字段集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserGridFields(System.Guid,System.Guid)">
            <summary>
            加载用户视图字段
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultGridFields(System.Guid,System.Boolean)">
            <summary>
            获取默认列表视图的字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="addForeignNameField">是否添加外键显示字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridFields(System.Guid,System.Boolean)">
            <summary>
            获取视图字段
            </summary>
            <param name="viewId">视图Id</param>
            <param name="addForeignNameField">是否自动添加外键Name网格字段</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridField(System.Guid,System.String)">
            <summary>
            获取网格字段
            </summary>
            <param name="viewId">视图Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultGridField(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取默认网格字段
            </summary>
            <param name="sysField">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridFields(Rookey.Frame.Model.Sys.Sys_Grid,System.Boolean,System.Boolean)">
            <summary>
            获取视图字段
            </summary>
            <param name="grid">视图对象</param>
            <param name="addForeignNameField">是否自动添加外键Name网格字段</param>
            <param name="isNeedCopy">是否需要复制，字段提供重写时用到</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultSearchGridFields(System.Guid,System.Boolean)">
            <summary>
            获取默认视图搜索字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="containId">是否包含Id列</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetSearchGridFields(System.Guid)">
            <summary>
            取搜索字段
            </summary>
            <param name="viewId">视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultGridGroupField(System.Guid)">
            <summary>
            获取默认列表分组字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridGroupField(System.Guid)">
            <summary>
            获取分组字段
            </summary>
            <param name="viewId">视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridRowFilterRules(System.Guid,System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_GridField},System.Collections.Generic.List{System.String}@,Rookey.Frame.Base.UserInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            获取列表行过滤规则
            </summary>
            <param name="moduleId">模块id</param>
            <param name="gridFields">模块字段</param>
            <param name="noFilterFields">不参与过滤的字段</param>
            <param name="currUser">当前用户</param>
            <param name="permisstionBtnIds">权限过滤的按钮ID集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldNamesOfView(System.Guid,System.Guid)">
            <summary>
            获取视图的字段
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="viewId">视图ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllGrids(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Grid,System.Boolean}})">
            <summary>
            获取所有视图集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllUserGrids(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_UserGrid,System.Boolean}})">
            <summary>
            获取所有用户视图集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGrids(System.Guid)">
            <summary>
            获取模块所有视图
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultGrid(System.Guid)">
            <summary>
            获取默认视图
            </summary>
            <param name="moduleId"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsSystemDefaultGrid(System.Guid)">
            <summary>
            是否是系统默认视图
            </summary>
            <param name="viewId">视图ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserDefaultGrid(System.Guid,System.Guid)">
            <summary>
            取用户默认列表视图
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAdminDefaultConfigGrid(System.Guid)">
            <summary>
            获取管理员admin默认配置视图
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserGrids(System.Guid,System.Guid)">
            <summary>
            取用户自己创建的列表视图
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetSystemGrids(System.Guid)">
            <summary>
            获取系统列表视图
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsUserGridView(System.Guid,System.Guid)">
            <summary>
            是否是用户视图
            </summary>
            <param name="viewId">视图Id</param>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsUserDefaultGridView(System.Guid,System.Guid)">
            <summary>
            判断是否为默认视图
            </summary>
            <param name="userId">用户Id</param>
            <param name="viewId">视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DeleteUserGrid(System.Guid,System.Guid)">
            <summary>
            删除用户视图
            </summary>
            <param name="userId">用户Id</param>
            <param name="viewId">视图Id</param>
            <returns>返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGrid(System.Guid)">
            <summary>
            获取视图
            </summary>
            <param name="id">视图Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllGridButtons(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_GridButton,System.Boolean}})">
            <summary>
            获取所有视图按钮
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridButton(System.Guid)">
            <summary>
            获取视图按钮
            </summary>
            <param name="btnId">按钮Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridButton(System.Guid,System.String)">
            <summary>
            获取视图按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="btnText">按钮显示文本</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridButtons(System.Guid)">
            <summary>
            获取列表工具栏所有按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetTopButtons(System.Guid)">
            <summary>
            获取顶级按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFileMenuButtons(System.Guid)">
            <summary>
            获取模块的文件菜单按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.IsFileMenuButton(System.Guid,System.Guid)">
            <summary>
            是否是文件菜单按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="btnId">按钮Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetChildButtons(System.Guid,System.Guid)">
            <summary>
            获取按钮的所有子按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="btnId">按钮Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridHeadButtons(System.Guid)">
            <summary>
            获取网格行头按钮集合，在网格行头显示的按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.HasChildButton(System.Guid,System.Guid)">
            <summary>
            是否有子按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="btnId">按钮Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridFormatFunction(System.Guid,Rookey.Frame.Model.Sys.Sys_Field,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            视图字段格式化
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="sysField">字段</param>
            <param name="gridId">网格domId</param>
            <param name="isAllowFieldEdit">允许网格字段编辑</param>
            <param name="otherFormatParams">其他格式化参数，主要针对主键字段</param>
            <param name="foreignFormatParams">外键格式化参数，针对外键字段</param>
            <param name="gridFieldName">网格字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridFormatFunction(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Model.Sys.Sys_Field,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            视图字段格式化
            </summary>
            <param name="module">模块</param>
            <param name="sysField">字段</param>
            <param name="gridId">网格domId</param>
            <param name="isAllowFieldEdit">允许网格字段编辑</param>
            <param name="otherFormatParams">其他格式化参数，主要针对主键字段</param>
            <param name="foreignFormatParams">外键格式化参数，针对外键字段</param>
            <param name="gridFieldName">网格字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetGridFormatFunction(System.Guid,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            视图字段格式化
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <param name="gridId">网格domId</param>
            <param name="isAllowFieldEdit">允许网格字段编辑</param>
            <param name="otherFormatParams">其他格式化参数，主要针对主键字段</param>
            <param name="foreignFormatParams">外键格式化参数，针对外键字段</param>
            <param name="gridFieldName">网格字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetComplexGridFormatFun(System.Guid,Rookey.Frame.Model.Sys.Sys_Field,System.String,System.String,System.Boolean)">
            <summary>
            网格字段格式化，用于自定义调用
            </summary>
            <param name="userId">当前用户</param>
            <param name="sysField">字段</param>
            <param name="gridFieldName">网格字段名</param>
            <param name="gridId">网格domid</param>
            <param name="isAllowEditField">字段是否允许编辑</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldEditor(Rookey.Frame.Model.Sys.Sys_Module,System.String,System.Nullable{System.Guid})">
            <summary>
            获取字段编辑器
            </summary>
            <param name="module">模块</param>
            <param name="fieldName">字段名称</param>
            <param name="userId">当前用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldEditor(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Model.Sys.Sys_Field,System.Nullable{System.Guid})">
            <summary>
            获取字段编辑器
            </summary>
            <param name="module">模块</param>
            <param name="sysField">字段</param>
            <param name="userId">当前用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFieldEditor(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Model.Sys.Sys_Field,Rookey.Frame.Model.Sys.Sys_FormField,System.Nullable{System.Guid})">
            <summary>
            获取字段编辑器
            </summary>
            <param name="module">模块</param>
            <param name="sysField">字段</param>
            <param name="formField">表单字段</param>
            <param name="userId">当前用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetNfDefaultFormSingleField(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取默认表单字段，不加载外键Name字段
            </summary>
            <param name="sysField"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetNfDefaultFormSingleField(System.Guid,System.String)">
            <summary>
            获取默认表单单个字段，不加载外键Name字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultFormSingleField(System.Guid,System.String)">
            <summary>
            获取默认表单单个字段，加载外键Name字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultFormSingleField(Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取默认表单单个字段
            </summary>
            <param name="sysField">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultFormSingleField(System.String,System.String)">
            <summary>
            获取模块默认表单单个字段
            </summary>
            <param name="moduleName">模块名称</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultFormField(System.Guid,System.Boolean)">
            <summary>
            获取模块默认表单字段集合
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="reference">是否加载导航，默认为是</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormField(System.Guid,System.String,System.Boolean)">
            <summary>
            获取表单字段
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="formName">表单名称</param>
            <param name="reference">是否加载导航，默认为是</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormField(System.String,System.String,System.Boolean)">
            <summary>
            获取表单字段
            </summary>
            <param name="moduleName">模块名称</param>
            <param name="formName">表单名称</param>
            <param name="reference">是否加载导航</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormField(System.Guid,System.Boolean)">
            <summary>
            获取表单字段
            </summary>
            <param name="formId">表单id</param>
            <param name="reference">是否加载导航，默认为是</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserFormFields(System.Guid,System.Guid)">
            <summary>
            获取用户表单字段
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetRoleFormFields(System.Guid,System.Guid)">
            <summary>
            获取角色表单字段集合
            </summary>
            <param name="roleId">角色Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserFormField(System.Guid,System.Guid,Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取单个用户表单字段
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <param name="sysField">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetRoleFormField(System.Guid,System.Guid,Rookey.Frame.Model.Sys.Sys_Field)">
            <summary>
            获取单个角色表单字段
            </summary>
            <param name="roleId">角色Id</param>
            <param name="moduleId">模块Id</param>
            <param name="sysField">字段信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetSearchFormField(System.Guid)">
            <summary>
            获取搜索表单字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.FormatFormField(Rookey.Frame.Model.Sys.Sys_Module,System.String)">
            <summary>
            格式化表单字段
            </summary>
            <param name="module">模块</param>
            <param name="fieldName">字段名称</param>
            <returns>返回格式化后的字段</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultBatchEditFields(System.Guid)">
            <summary>
            获取默认表单批量编辑字段集合
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBatchEditFields(System.Guid)">
            <summary>
            获取表单批量编辑字段集合
            </summary>
            <param name="formId">表单Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUniqueVerifyFields(System.Guid)">
            <summary>
            获取唯一性验证字段集合
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultImageUploadFormFields(System.Guid)">
            <summary>
            获取默认图片上传表单字段
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetImageUploadFormFields(System.Guid)">
            <summary>
            获取表单图片上传表单字段
            </summary>
            <param name="formId">表单ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllForms(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Form,System.Boolean}})">
            <summary>
            获取所有表单集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllRoleForms(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_RoleForm,System.Boolean}})">
            <summary>
            获取所有角色表单集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDefaultForm(System.Guid)">
            <summary>
            获取默认表单
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleForms(System.Guid)">
            <summary>
            获取模块表单
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForm(System.Guid)">
            <summary>
            获取表单
            </summary>
            <param name="formId">表单id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForm(System.Guid,System.String)">
            <summary>
            获取表单
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="formName">表单名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetForm(System.String,System.String)">
            <summary>
            获取表单
            </summary>
            <param name="moduleName">模块名称</param>
            <param name="formName">表单名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetRoleForm(System.Guid,System.Guid)">
            <summary>
            获取角色表单
            </summary>
            <param name="roleId">角色Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserForm(System.Guid,System.Guid)">
            <summary>
            获取用户表单
            </summary>
            <param name="userId">用户Id</param>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetUserFinalForm(Rookey.Frame.Base.UserInfo,System.Guid,System.Nullable{System.Guid})">
            <summary>
            获取用户最终表单
            </summary>
            <param name="currUser">当前用户</param>
            <param name="moduleId">模块ID</param>
            <param name="todoTaskId">待办任务ID</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormButtons(System.Guid,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Boolean,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单按钮
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="formType">表单类型</param>
            <param name="isAdd">是否新增表单</param>
            <param name="isDraft">是否是草稿</param>
            <param name="recordId">表单记录ID</param>
            <param name="toDoTaskId">待办ID</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormButtons(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Boolean,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid},Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单按钮
            </summary>
            <param name="module">模块</param>
            <param name="formType">表单类型</param>
            <param name="isAdd">是否新增表单</param>
            <param name="isDraft">是否是草稿</param>
            <param name="recordId">表单记录ID</param>
            <param name="toDoTaskId">待办任务ID,针对流程表单</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormToolTags(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单工具标签按钮集合
            </summary>
            <param name="module">模块</param>
            <param name="formType">表单类型</param>
            <param name="isAdd">是否新增页面</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBillCodeFieldName(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            获取编码规则字段
            </summary>
            <param name="module">模块</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBillCodeFieldName(System.Guid)">
            <summary>
            获取编码规则字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBillCode(Rookey.Frame.Model.Sys.Sys_Module,System.String)">
            <summary>
            获取单据编码
            </summary>
            <param name="module">模块</param>
            <param name="currCode">当前编码</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBillCode(System.Guid)">
            <summary>
            获取单据编码
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetNextBillCode(Rookey.Frame.Model.Sys.Sys_BillCodeRule)">
            <summary>
            获取下一编码
            </summary>
            <param name="billCodeRule">编码规则</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetNextBillCodeByCurrCode(Rookey.Frame.Model.Sys.Sys_BillCodeRule,System.String)">
            <summary>
            根据当前编码获取下一编码
            </summary>
            <param name="billCodeRule">编码规则对象</param>
            <param name="currCode">当前编码</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.UpdateBillCode(System.Guid,System.String)">
            <summary>
            更新当前模块编码
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="currCode">当前编码</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetFormFieldFilterCondition(System.String@,System.String,System.String,System.Guid,System.String)">
            <summary>
            取表单的过滤条件，过滤条件为SQL时whereSql为SQL语句条件，否则为Json或条件名称时返回条件表达式
            </summary>
            <param name="whereSql">SQL条件语句</param>
            <param name="moduleName">原始模块名称</param>
            <param name="fieldName">原始字段名称</param>
            <param name="foreignModuleId">外键模块Id</param>
            <param name="relyFieldsValue">依赖字段值</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetBindDictonaryClass(System.Guid,System.String)">
            <summary>
            获取字段绑定的字典分类
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDictionaryData(System.Guid,System.String)">
            <summary>
            获取字典数据
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDictionaryData(System.String)">
            <summary>
            获取字典集合
            </summary>
            <param name="className">字典分类</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetChildDictionary(System.Guid,System.String,System.String)">
            <summary>
            获取字段的子字典
            </summary>
            <param name="moduleId">模块</param>
            <param name="fieldName">字段</param>
            <param name="dicValue">字段字典值</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetPageIcons(System.Int64@,System.Nullable{Rookey.Frame.Model.EnumSpace.IconTypeEnum},Rookey.Frame.Operate.Base.TempModel.PageInfo)">
            <summary>
            根据图标类型过滤分页图标
            </summary>
            <param name="iconType">图标类型</param>
            <param name="total">总记录数</param>
            <param name="pageInfo">分页信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetPageIconsHtml(System.Int64@,System.Int32@,System.Nullable{Rookey.Frame.Model.EnumSpace.IconTypeEnum},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="total">总记录数</param>
            <param name="pageSize">每页图标数</param>
            <param name="iconType">图标类型</param>
            <param name="pageIndex">页码</param>
            <param name="w">图标面板宽，默认832</param>
            <param name="h">图标面板高，默认384</param>
            <param name="iconSize">图标所占大小，默认64</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetIconUrl(System.String)">
            <summary>
            获取图标url
            </summary>
            <param name="iconClassName">图标类名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDesktopItems(Rookey.Frame.Base.UserInfo)">
            <summary>
            获取桌面项
            </summary>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDesktopGridFields(System.Guid)">
            <summary>
            获取桌面配置字段
            </summary>
            <param name="moduleId">模块Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DeleteAttachment(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Attachment})">
            <summary>
            删除附件
            </summary>
            <param name="tempAttachments">附件集合</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetEnumTypeList(System.Type)">
            <summary>
            获取枚举集合对象
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.EnumFieldDataJson(System.Guid,System.String)">
            <summary>
            绑定枚举字段下拉框数据
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetEnumFieldDisplayText(System.Guid,System.String,System.String)">
            <summary>
            获取枚举字段显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.ForeignFieldComboDataJson(System.Guid,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            绑定外键字段下拉框数据
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="fieldName">字段名</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DictionaryDataJson(System.String)">
            <summary>
            获取字典分类数据
            </summary>
            <param name="className">字典分类名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DictionaryDataJson(System.Guid,System.String)">
            <summary>
            绑定下拉框字典数据
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetChildDictionaryJson(System.Guid,System.String,System.String)">
            <summary>
            获取子字典数据JSON
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="fieldName">字段名称</param>
            <param name="dicValue">字段字典值</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetDictionaryDisplayText(System.Guid,System.String,System.String)">
            <summary>
            获取字段字典显示值
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetPageCacheHtml(System.Guid,System.String,Rookey.Frame.Model.EnumSpace.CachePageTypeEnum)">
            <summary>
            获取页面缓存html
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="cachekey">缓存KEY</param>
            <param name="cachePageType">缓存页面类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.SetPageCacheHtml(System.Guid,System.String,Rookey.Frame.Model.EnumSpace.CachePageTypeEnum,System.String)">
            <summary>
            设置页面缓存html
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="cachekey">缓存KEY</param>
            <param name="cachePageType">缓存页面类型</param>
            <param name="html">页面html</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.DbIsExists(Rookey.Frame.Common.Model.DbLinkArgs)">
            <summary>
            判断数据库是否存在
            </summary>
            <param name="dbLinkArgs">数据库连接参数</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.RegCrossDbServer">
            <summary>
            注册其他链接数据服务器
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.RegStoredProcedure">
            <summary>
            向数据库中注册存储过程
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.RegStoredProcedure(Rookey.Frame.Common.Model.DbLinkArgs)">
            <summary>
            注册存储过程
            </summary>
            <param name="dbLinkArgs">数据库链接对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModuleDbType(Rookey.Frame.Model.Sys.Sys_Module,System.String@)">
            <summary>
            获取模块数据库类型，默认MsSqlServer
            </summary>
            <param name="module">模块</param>
            <param name="connString">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetTableIndexInfo(System.String)">
            <summary>
            获取模块索引信息
            </summary>
            <param name="moduleName">模块名称</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.RebuildTableIndex(System.String)">
            <summary>
            重建数据表索引
            </summary>
            <param name="moduleName"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.RebuildAllTableIndex">
            <summary>
            重建所有模块索引
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetModulePrimarykeyIndexName(Rookey.Frame.Model.Sys.Sys_Module)">
            <summary>
            获取模块主键索引名
            </summary>
            <param name="module">模块</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.LoadAllModuleCache">
            <summary>
            加载所有模块缓存
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.TriggerEventNotify(System.Collections.Generic.List{Rookey.Frame.Model.Msg.Msg_EventNotify},System.Collections.Generic.List{System.Guid},Rookey.Frame.Base.UserInfo,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            触发事件通知
            </summary>
            <param name="eventNotifys">事件通知集合</param>
            <param name="recordIds">记录ID集合</param>
            <param name="currUser">当前用户</param>
            <param name="otherDicTos">其他收件人</param>
            <param name="otherDicCcs">其他抄送人</param>
            <param name="otherDicBccs">其他密送人</param>
            <param name="sendFlag">发送标识，写入到发送日志中</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.TriggerEventNotify(System.Guid,System.Guid,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Base.UserInfo)">
            <summary>
            触发事件通知，针对模块通用功能
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="operateType">操作类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.TriggerEventNotify(System.Guid,System.Collections.Generic.List{System.Guid},Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,Rookey.Frame.Base.UserInfo)">
            <summary>
            触发事件通知
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordIds">记录ID集合</param>
            <param name="operateType">操作类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.TriggerEventNotify(System.Guid,System.Guid,System.Guid,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Base.UserInfo,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.Guid,Rookey.Frame.Model.Bpm.Bpm_WorkToDoList},Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,System.Nullable{System.Guid},Rookey.Frame.Model.Bpm.Bpm_WorkToDoList)">
            <summary>
            触发事件通知，针对流程
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="workNodeId">流程结点ID</param>
            <param name="workAction">操作动作</param>
            <param name="currUser">当前用户</param>
            <param name="starterEmpId">发起人ID</param>
            <param name="nextHandlers">下一审批人ID及待办集合</param>
            <param name="flowStatus">流程状态</param>
            <param name="directHandler">被指派人ID</param>
            <param name="workTodo">当前待办</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.WorkTodoHandleCommonEmail(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.Guid,Rookey.Frame.Model.Bpm.Bpm_WorkToDoList},Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.OrgM.OrgM_Emp,Rookey.Frame.Base.UserInfo,System.Nullable{System.Guid},Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,System.String)">
            <summary>
            待办处理通用邮件
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="nextHandlers">下一待办处理人集合</param>
            <param name="workNode">当前结点</param>
            <param name="workAction">操作</param>
            <param name="empStarter">发起者</param>
            <param name="currUser">当前用户</param>
            <param name="directHandler">被指派人</param>
            <param name="flowStatus">流程状态</param>
            <param name="todoTitle">当前待办标题</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.WorkTodoNotifyCommonEmail(System.Guid,System.Guid,Rookey.Frame.Model.Bpm.Bpm_WorkNode,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.OrgM.OrgM_Emp,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Model.Bpm.Bpm_WorkToDoList)">
            <summary>
            待办知会通用邮件
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="workNode">当前结点</param>
            <param name="workAction">操作</param>
            <param name="empStarter">发起者</param>
            <param name="currUser">当前用户</param>
            <param name="flowStatus">流程状态</param>
            <param name="workTodo">当前待办</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.TriggerEventNotify(System.Guid,System.Guid,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            触发事件通知，针对自定义事件
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="recordId">记录ID</param>
            <param name="flag">标识</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllEventNotifys(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Msg.Msg_EventNotify,System.Boolean}})">
            <summary>
            获取所有合法的事件通知集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetEventNotifys(System.Guid,Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType)">
            <summary>
            获取模块的事件通知集合，功能模块通用操作
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="operateType">操作类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetEventNotifys(System.Guid,System.Guid,Rookey.Frame.Model.EnumSpace.WorkActionEnum)">
            <summary>
            获取模块的事件通知集合，流程操作
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="workNodeId">流程结点ID</param>
            <param name="workAction">流程操作类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetEventNotifys(System.Guid,System.String)">
            <summary>
            获取模块的事件通知集合，自定义操作
            </summary>
            <param name="moduleId"></param>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.GetAllMsgTemplates(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Msg.Msg_Template,System.Boolean}})">
            <summary>
            获取所有合法的消息模板集合
            </summary>
            <param name="exp">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.EmailSend(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.String,System.String,System.Action{System.String},System.String,System.String)">
            <summary>
            邮件发送
            </summary>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="attachFiles">附件信息</param>
            <param name="tomails">接收人，key-邮件地址，value-员工姓名</param>
            <param name="ccmails">抄送人，key-邮件地址，value-员工姓名</param>
            <param name="bccmails">密送人，key-邮件地址，value-员工姓名</param>
            <param name="isSaveLog">是否保存发送日志</param>
            <param name="fromAddress">发件人</param>
            <param name="fromDes">发件人描述</param>
            <param name="fromPwd">发件人密码</param>
            <param name="action">回调函数</param>
            <param name="eventName">事件名称</param>
            <param name="sendFlag">发送标识，发送日志中用到</param>
            <returns>返回异常信息，为空表明成功</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.EmailSendByWebMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Action{System.String},System.String,System.String)">
            <summary>
            WebMail发送邮件
            </summary>
            <param name="subject">邮件主题</param>
            <param name="body">邮件内容</param>
            <param name="to">接收人</param>
            <param name="attachFiles">附件信息</param>
            <param name="cc">抄送人</param>
            <param name="bcc">密送人</param>
            <param name="isSaveLog">是否保存发送日志</param>
            <param name="fromAddress">发送人</param>
            <param name="fromPwd">发送邮箱密码</param>
            <param name="fromDes">发送人描述</param>
            <param name="action">回调函数</param>
            <param name="eventName">事件名称</param>
            <param name="sendFlag">发送标识</param>
            <returns>发送成功返回空字符串，否则返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.SystemOperate.SaveMsgLog(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            保存邮件发送日志
            </summary>
            <param name="eventName">事件名称,自定义标识</param>
            <param name="sender">发送人</param>
            <param name="tos">收件人</param>
            <param name="ccs">抄送人</param>
            <param name="bccs">密送人</param>
            <param name="subject">主题</param>
            <param name="content">内容</param>
            <param name="isSuccess">是否成功</param>
            <param name="errMsg">异常信息</param>
            <param name="sendFlag">发送标识</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo">
            <summary>
            审批信息类
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.NodeName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.Handler">
            <summary>
            处理人
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.HandleResult">
            <summary>
            处理结果
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.ApprovalOpinions">
            <summary>
            处理意见
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.HandleTime">
            <summary>
            处理时间
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.NextNodeName">
            <summary>
            下一节点显示名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.NextName">
            <summary>
            下一节点名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ApprovalInfo.NextHandler">
            <summary>
            下一处理人
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FormFastObject">
            <summary>
            表单数据对象（快速）
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ModuleData">
            <summary>
            序列化后的模块数据
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.NeedUpdateFields">
            <summary>
            需要更新的字段，针对更新
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.Details">
            <summary>
            模块明细
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.IsDraft">
            <summary>
            是否保存为草稿
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.IsReleaseDraft">
            <summary>
            是否发布草稿
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.OpFlowBtnId">
            <summary>
            操作的流程按钮ID，为0时为提交流程，大于0时为审批流程
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ToDoTaskId">
            <summary>
            待办任务ID，如果当前为子流程审批，则当前为父待办ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ChildTodoIds">
            <summary>
            子流程待办ID集合，针对子流程审批用到
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ApprovalOpinions">
            <summary>
            审批意见
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.ReturnNodeId">
            <summary>
            回退结点ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObject.DirectHandler">
            <summary>
            被指派处理人ID
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FormFastObjectDetail">
            <summary>
            明细表单对象（快速）
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObjectDetail.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObjectDetail.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObjectDetail.ModuleDatas">
            <summary>
            明细行数据
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormFastObjectDetail.NeedUpdateFields">
            <summary>
            需要更新的字段，针对更新
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FormToolTag">
            <summary>
            表单工具标签按钮
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormToolTag.TagId">
            <summary>
            标签Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormToolTag.Text">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormToolTag.ClickMethod">
            <summary>
            单击事件
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormToolTag.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormToolTag.Title">
            <summary>
            tooltip提示
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.GridDataParmas">
            <summary>
            默认网格数据参数
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.#ctor(System.Guid)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块Id</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.#ctor(System.Guid,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块id</param>
            <param name="pageInfo">分页信息</param>
            <param name="q">搜索关键字</param>
            <param name="condition">过滤条件</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.#ctor(System.Guid,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.String,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块id</param>
            <param name="pageInfo">分页信息</param>
            <param name="q">搜索关键字</param>
            <param name="condition">过滤条件</param>
            <param name="items">过滤条件集合</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.#ctor(System.Guid,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.String,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块id</param>
            <param name="pageInfo">分页信息</param>
            <param name="q">搜索关键字</param>
            <param name="condition">过滤条件</param>
            <param name="items">过滤条件集合</param>
            <param name="whereCon">Where条件语句</param>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.PagingInfo">
            <summary>
            分页信息
            </summary>
        </member>
        <!-- 对于成员“P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.Q”忽略有格式错误的 XML 注释 -->
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.FilterRules">
            <summary>
            网格过滤规则
            </summary>
        </member>
        <!-- 对于成员“P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.Condition”忽略有格式错误的 XML 注释 -->
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.CdItems">
            <summary>
            过滤条件集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.WhereCon">
            <summary>
            Where条件语句
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.GridType">
            <summary>
            网格类型
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.OtherParams">
            <summary>
            其他参数
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.ViewId">
            <summary>
            综合视图Id，为综合视图时传递
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.GridViewId">
            <summary>
            当前加载视图ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsComprehensiveDetailView">
            <summary>
            是否综合明细视图，综合视图中带明细字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsDetailCopy">
            <summary>
            是否明细复制
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsTreeGrid">
            <summary>
            是否是树型网格
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsPermissionFilter">
            <summary>
            是否权限过滤
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsRestartFlow">
            <summary>
            是否为重新发起流程
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.IsExportData">
            <summary>
            是否导出数据
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridDataParmas.NeedLoadFields">
            <summary>
            加载数据时需要加载的字段
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams">
            <summary>
            弹出框网格数据参数
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams.#ctor(System.Guid,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="initModule">原始模块</param>
            <param name="initField">原始字段</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams.#ctor(System.Guid,System.String,System.String,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.String,System.String,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="initModule">原始模块</param>
            <param name="initField">原始字段</param>
            <param name="pageInfo">分页信息</param>
            <param name="q">搜索关键字</param>
            <param name="condition">过滤条件</param>
            <param name="relyFieldsValue">依赖字段值</param>
            <param name="items">过滤条件集合</param>
            <param name="whereCon">where条件语句</param>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams.InitModule">
            <summary>
            针对外键弹出框时选择外键模块数据的原始模块，
            如在员工新增页面选择部门时，员工模块就为原始模块
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams.InitField">
            <summary>
            针对外键弹出框时选择外键模块数据的原始字段，
            如在员工新增页面选择部门时，员工模块的部门字段就为原始字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DialogGridDataParams.RelyFieldsValue">
            <summary>
            针对外键弹出框时选择外键模块数据，表单字段中设置的过滤条件和依赖字段条件
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.AutoCompelteDataParams">
            <summary>
            自动完成数据加载参数
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.AutoCompelteDataParams.#ctor(System.Guid,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.AutoCompelteDataParams.#ctor(System.Guid,System.String,Rookey.Frame.Operate.Base.TempModel.PageInfo,System.String,System.String,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="fieldName">字段名</param>
            <param name="pageInfo">分页信息</param>
            <param name="q">搜索关键字</param>
            <param name="condition">过滤条件</param>
            <param name="items">过滤条件集合</param>
            <param name="whereCon">where条件语句</param>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AutoCompelteDataParams.FieldName">
            <summary>
            实现自动补全功能的字段名
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AutoCompelteDataParams.InitModule">
            <summary>
            针对外键智能提示选择外键模块数据的原始模块，
            如在员工新增页面选择部门时，员工模块就为原始模块
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.GridFilterRule">
            <summary>
            网格过滤规则
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridFilterRule.field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridFilterRule.op">
            <summary>
            操作
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridFilterRule.value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum">
            <summary>
            过滤操作枚举
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.contains">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.notequal">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.beginwith">
            <summary>
            开始于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.endwith">
            <summary>
            结束于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.lessorequal">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.greater">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.greaterorequal">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.isnull">
            <summary>
            等于空
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.FilterOpEnum.isnotnull">
            <summary>
            不等于空
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.GridParams">
            <summary>
            网格参数类
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.DataOrUrl">
            <summary>
            数据或URL
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.IsTreeGrid">
            <summary>
            是否树网格
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.TreeField">
            <summary>
            树网格时的树字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.IsPaging">
            <summary>
            是否分页
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.PageList">
            <summary>
            分页列表
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.IsMutiSelect">
            <summary>
            是否多选
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.GridFields">
            <summary>
            网格字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.GroupField">
            <summary>
            分组字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.GridButtons">
            <summary>
            网格按钮
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.OtherParmas">
            <summary>
            其他参数
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.GridParams.DicPramas">
            <summary>
            Dic参数集合
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.PermissionModel">
            <summary>
            权限保存时用此类反序列化
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanOpMeuId">
            <summary>
            允许浏览时的模块对应菜单Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanOpBtnIds">
            <summary>
            允许操作的按钮Id集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanViewDataOrgIds">
            <summary>
            允许浏览数据范围的组织Id集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanEditDataOrgIds">
            <summary>
            允许编辑数据范围的组织Id集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanDelDataOrgIds">
            <summary>
            允许删除数据范围的组织Id集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanViewFields">
            <summary>
            允许查看的字段集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanAddFields">
            <summary>
            允许新增的字段集合
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PermissionModel.CanEditFields">
            <summary>
            允许编辑的字段集合
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.ToolOperate">
            <summary>
            工具操作类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.CreateTempModule(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.DetailFormObject)">
            <summary>
            创建临时模块
            </summary>
            <param name="tempModule">模块对象</param>
            <param name="tempField">字段信息</param>
            <returns>返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.GenerateModel(Rookey.Frame.EntityBase.Attr.ModuleConfigAttribute,System.Collections.Generic.List{Rookey.Frame.EntityBase.Attr.FieldConfigAttribute},System.String)">
            <summary>
            生成实体类
            </summary>
            <param name="moduleConfig">模块配置</param>
            <param name="fieldConfig">字段配置</param>
            <param name="file">生成文件全路径</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.GenerateModel(System.String,System.String,System.Nullable{Rookey.Frame.Common.PubDefine.DatabaseType})">
            <summary>
            把数据库下的所有数据表生成实体类
            </summary>
            <param name="dbName">数据库名</param>
            <param name="connectString">连接字符串</param>
            <param name="dbType">数据库类型</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.RepairTables(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            修复数据表，参数为空时修复所有
            </summary>
            <param name="tableNames">表名集合</param>
            <param name="isRepairModuleData">是否修复模块相关数据</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.RepairTableFields(System.Type,System.Collections.Generic.List{System.String})">
            <summary>
            修复表字段，针对已经存在的模块
            </summary>
            <param name="modelType">实体类型</param>
            <param name="fieldNames">字段集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.CreateOrRepairTable(System.Type)">
            <summary>
            创建或修复数据表
            </summary>
            <param name="modelType">实体类型对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.CreateOrRepairTable(System.Collections.Generic.List{System.Type})">
            <summary>
            创建或修复数据表
            </summary>
            <param name="modelTypes">实体类型对象集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.GetDbColumnInfo(System.String,System.String)">
            <summary>
            获取数据库字段信息
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.CreateImportModelTemplate(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Base.UserInfo,System.String)">
            <summary>
            生成导入实体模板
            </summary>
            <param name="module">模块</param>
            <param name="currUser">当前用户</param>
            <param name="fileName">保存文件（绝对路径）</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.FillModels(System.Guid,System.Data.DataTable,System.String@,System.Func{System.Object,System.String})">
            <summary>
            用DataTable填充实体集合并进行约束检查
            </summary>
            <param name="moduleId">模块</param>
            <param name="dt">dt</param>
            <param name="errMsg">异常信息</param>
            <param name="action">实体组装后动作</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.FillToDataTable(System.Guid,System.Object,Rookey.Frame.Base.UserInfo,System.String@,System.Nullable{System.Guid})">
            <summary>
            将数据导入到Excel中
            </summary>
            <param name="moduleId">模块Id</param>
            <param name="data">数据集合</param>
            <param name="currUser">当前用户</param>
            <param name="errMsg">异常信息</param>
            <param name="viewId">视图ID</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.InitNewModules(System.Collections.Generic.List{System.Type},System.Boolean)">
            <summary>
            初始化新建模块
            </summary>
            <param name="modelTypes">模块类型集合</param>
            <param name="isCustomer">是否自定义模块</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.IsNeedInit">
            <summary>
            是否需要初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ToolOperate.InitData">
            <summary>
            系统初始化时调用，初始化数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.CommonDefine">
            <summary>
            常用变量定义
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.BaseEntityFields">
            <summary>
            基类字段集合
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.BaseEntityFieldsContainId">
            <summary>
            包含Id的基类字段集合
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.NoUpdateFields">
            <summary>
            不需要更新字段集合
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.GridCommonBtns">
            <summary>
            网格通用按钮
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.MaxLoadForeignNameFieldsCount">
            <summary>
            加载外键Name字段的最小记录数
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.NoFrameFlag">
            <summary>
            无框架标识
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.CommonDefine.MutiCheckboxTrueValue">
            <summary>
            多选Checkbox框真值
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1">
            <summary>
            查询处理类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1.GetQueryCondition(System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取查询条件
            </summary>
            <param name="conditionItems">条件集合</param>
            <returns>返回Lamda表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1.GetQueryCondition(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取查询条件
            </summary>
            <param name="dicCondition">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1.GetExpressoinBody(System.Linq.Expressions.ParameterExpression,System.Collections.Generic.ICollection{Rookey.Frame.Operate.Base.TempModel.ConditionItem})">
            <summary>
            获取条件表达式
            </summary>
            <param name="param">条件参数</param>
            <param name="items">条件集合</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1.ChangeType(System.Object,System.Type)">
            <summary>
            类型转换，支持非空类型与可空类型之间的转换
            </summary>
            <param name="value"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.QueryableSearcher`1.ChangeTypeToExpression(Rookey.Frame.Operate.Base.TempModel.ConditionItem,System.Type)">
            <summary>
            转换SearchItem中的Value的类型，为表达式树
            </summary>
            <param name="item"></param>
            <param name="conversionType">目标类型</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.ConditionChange.UnixTimeUtil.FromDateTime(System.DateTime)">
            <summary>
            将.NET的DateTime转换为unix time
            </summary>
            <param name="dateTime">待转换的时间</param>
            <returns>转换后的unix time</returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.EnumDef.QueryMethod">
            <summary>
            表单元素的检索方式
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.Contains">
            <summary>
            处理Like的问题
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.In">
            <summary>
            包含于
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.Like">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.StartsWith">
            <summary>
            开头为
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.EndsWith">
            <summary>
            结尾为
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.StdIn">
            <summary>
            处理In的问题
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.DateBlock">
            <summary>
            输入一个时间获取当前天的时间块操作, ToSql未实现，仅实现了IQueryable
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.EnumDef.QueryMethod.DateTimeLessThanOrEqual">
            <summary>
            处理Datetime小于+23h59m59s999f的问题
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.Extension.ExtendedJavaScriptConverter`1">
            <summary>
            扩展JS转换类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.Extension.JsonExtension">
            <summary>
            序列化扩展类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.Extension.JsonExtension.ToJson``1(System.Collections.Generic.List{``0})">
            <summary>
            序列化为MVC支持的JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.Extension.JsonExtension.ToJson``1(``0)">
            <summary>
            序列化为MVC支持的JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.Extension.JsonExtension.Paged(System.Collections.IEnumerable,System.Int64)">
            <summary>
            分页数据
            </summary>
            <param name="pageData">分页数据</param>
            <param name="totalCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_MenuOperateHandle">
            <summary>
            菜单操作事件
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_MenuOperateHandle.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType"></param>
            <param name="gridParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_MenuOperateHandle.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module"></param>
            <param name="gridDataParams"></param>
            <param name="request"></param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.Implement.Sys_MenuOperateHandle.PageGridDataHandle(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_Menu},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格数据处理
            </summary>
            <param name="data"></param>
            <param name="otherParams"></param>
            <param name="currUser"></param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType">
            <summary>
            模块操作类型
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType.Add">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType.Del">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType.View">
            <summary>
            查看
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType.Restore">
            <summary>
            删除后还原
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.OperateInterfaceType">
            <summary>
            接口操作类型
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IPermissionHandle`1">
            <summary>
            权限操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IPermissionHandle`1.GetPermissionExp(Rookey.Frame.Base.UserInfo,System.String@,System.Boolean)">
            <summary>
            权限过滤条件表达式，如x=>x.Name=="name"
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="filterWhere">权限过滤SQL语句，如 Name='name'</param>
            <param name="queryCache">是否从缓存中查询</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IPermissionHandle`1.HasRecordOperatePermission(Rookey.Frame.Base.UserInfo,`0,System.Int32)">
            <summary>
            是否有记录的操作（查看，更新、删除）权限
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="t">单据对象</param>
            <param name="type">类型，0-查看，1-更新，2-删除</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1">
            <summary>
            流程操作处理接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1.GetFlowNextHandleNodeName(System.Guid,System.String,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取流程下一处理节点名称
            </summary>
            <param name="recordId">记录ID</param>
            <param name="workflowName">流程名称</param>
            <param name="currNodeName">当前节点名称</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1.BeforeFlowOperateCheck(Rookey.Frame.Base.UserInfo,System.Guid,Rookey.Frame.Model.EnumSpace.WorkActionEnum,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String)">
            <summary>
            流程操作前验证事件
            </summary>
            <param name="currUser">当前用户</param>
            <param name="recordId">记录ID</param>
            <param name="workAction">操作动作</param>
            <param name="toDoTaskId">待办ID，为空时为发起</param>
            <param name="returnNodeId">回退ID</param>
            <param name="directHandler">被指派人ID</param>
            <param name="currNodeName">当前结点名称</param>
            <returns>返回验证失败信息，为空表示验证成功</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1.AfterFlowOperateCompleted(System.Guid,System.String,Rookey.Frame.Base.UserInfo,System.Boolean,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,System.String)">
            <summary>
            流程操作完成后事件处理
            </summary>
            <param name="id">记录ID</param>
            <param name="currNodeName">当前流程结点名称</param>
            <param name="currUser">当前处理人</param>
            <param name="isOpSuccess">是否操作成功</param>
            <param name="workAction">流程操作动作，同意、拒绝、。。。</param>
            <param name="flowStatus">流程状态</param>
            <param name="approvalOpinions">审批意见</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1.GetNodeHandler(System.Guid,System.String,System.Guid,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取结点处理人
            </summary>
            <param name="recordId">记录ID</param>
            <param name="nodeName">结点名称</param>
            <param name="workFlowInstId">流程实例ID</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IFlowOperateHandle`1.GetWorkTodoTitle(System.Guid,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取待办标题
            </summary>
            <param name="recordId">记录ID</param>
            <param name="workflowName">流程名称</param>
            <param name="currUser">发起人</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IMsgNotifyHandle`1">
            <summary>
            消息通知处理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IMsgNotifyHandle`1.WorkflowMsgNotify(System.Guid,System.String,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.OrgM.OrgM_Emp,System.Collections.Generic.Dictionary{System.Guid,System.String},System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String})">
            <summary>
            流程消息通知
            </summary>
            <param name="recordId">记录ID</param>
            <param name="nodeName">结点名称</param>
            <param name="workAction">操作</param>
            <param name="flowStatus">流程状态</param>
            <param name="currUser">当前用户</param>
            <param name="empStarter">发起人</param>
            <param name="nextHandlers">下一处理人及对应跳转URL</param>
            <param name="notifyUrl">知会跳转URL</param>
            <param name="isEmailNotify">是否邮件通知，否则为短信通知</param>
            <param name="otherDicCcs">需要知会的其他人员，主要针对邮件通知</param>
            <param name="subjectContens">主题内容，List[0]为主题，List[1]为内容</param>
            <returns>返回null继续走通用处理，否则表示处理成功</returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IImExportHandle`1">
            <summary>
            导入导出处理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IImExportHandle`1.GetImportTemplateFields(System.Collections.Generic.List{System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回导入模板字段，导入模板中将只出现返回后的字段
            </summary>
            <param name="formFields">表单字段</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IImExportHandle`1.GetExportFields(System.Collections.Generic.List{System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回导出字段列
            </summary>
            <param name="gridFields">列表字段</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IUIFlowHandle`1">
            <summary>
            流程UI绘制接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUIFlowHandle`1.GetFlowTipsHTML(System.Guid,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            流程UI重新绘制
            </summary>
            <param name="recordId">记录ID</param>
            <param name="flowStatus">流程状态</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1">
            <summary>
            操作处理工厂
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetOperateHandleInstance(Rookey.Frame.Operate.Base.OperateHandle.OperateInterfaceType)">
            <summary>
            获取操作对象实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.BeforeOperateVerifyOrHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,`0,System.String@,System.Object[])">
            <summary>
            单个实体操作前验证或处理
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">操作对象</param>
            <param name="errMsg">错误信息</param>
            <param name="otherParams">其他参数</param>
            <returns>是否通过验证</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.OperateCompeletedHandle(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,`0,System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            单个实体操作完成处理
            </summary>
            <param name="operateType">操作类型</param>
            <param name="t">实体对象</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.BeforeOperateVerifyOrHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{`0},System.String@,System.Object[])">
            <summary>
            多个实体操作前验证或处理
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">操作对象集合</param>
            <param name="errMsg">错误信息</param>
            <param name="otherParams">其他参数</param>
            <returns>是否通过验证</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.OperateCompeletedHandles(Rookey.Frame.Operate.Base.OperateHandle.ModelRecordOperateType,System.Collections.Generic.List{`0},System.Boolean,Rookey.Frame.Base.UserInfo,System.Object[])">
            <summary>
            多个实体操作完成处理
            </summary>
            <param name="operateType">操作类型</param>
            <param name="ts">实体对象集合</param>
            <param name="result">操作结果</param>
            <param name="currUser">当前用户</param>
            <param name="otherParams">其他参数</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GridParamsSet(Rookey.Frame.Operate.Base.EnumDef.DataGridType,Rookey.Frame.Operate.Base.TempModel.GridParams,System.Web.HttpRequestBase)">
            <summary>
            网格参数设置
            </summary>
            <param name="gridType">网格类型</param>
            <param name="gridParams">网格参数对象</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GridLoadDataParamsSet(Rookey.Frame.Model.Sys.Sys_Module,Rookey.Frame.Operate.Base.TempModel.GridDataParmas,System.Web.HttpRequestBase)">
            <summary>
            网格数据加载参数设置
            </summary>
            <param name="module">模块</param>
            <param name="gridDataParams">数据加载参数</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.PageGridDataHandle(System.Collections.Generic.List{`0},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            返回分页网格数据前对数据处理
            </summary>
            <param name="data">处理前的网格数据</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetGridFilterCondition(System.String@,Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回网格过滤条件
            </summary>
            <param name="where">where条件语句</param>
            <param name="gridType">网格类型</param>
            <param name="condition">条件参数</param>
            <param name="initModule">原始模块（弹出选择外键模块数据的初始模块），弹出列表用到</param>
            <param name="initField">原始字段（弹出选择外键模块数据的初始字段），弹出列表用到</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns>返回条件表达式</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GridButtonOperateVerify(System.Guid,System.String,System.Collections.Generic.List{System.Guid},System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            网格按钮操作验证
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="buttonText">按钮显示名称</param>
            <param name="ids">操作的记录Id集合</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns>验证通过，返回空字符串，验证不通过，返回验证提示信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetSeachResults(System.Collections.Generic.Dictionary{System.String,System.String},System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写多字段搜索结果
            </summary>
            <param name="q">搜索键值对</param>
            <param name="whereSql">过滤条件语句</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetSearchResult(System.String,System.Object,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写单字段搜索结果
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="value">字段值</param>
            <param name="whereSql">过滤条件语句</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.FormDataHandle(`0,Rookey.Frame.Model.EnumSpace.FormTypeEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            返回表单数据前对表单数据进行处理
            </summary>
            <param name="t">实体对象</param>
            <param name="formType">表单类型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetFormButtons(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormButton},System.Boolean,System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            取表单页面按钮
            </summary>
            <param name="formType">表单类型</param>
            <param name="buttons">原有表单按钮</param>
            <param name="isAdd">是否新增页面</param>
            <param name="isDraft">是否草稿</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetFormToolTags(Rookey.Frame.Model.EnumSpace.FormTypeEnum,System.Collections.Generic.List{Rookey.Frame.Operate.Base.TempModel.FormToolTag},System.Boolean,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取表单工具标签按钮集合
            </summary>
            <param name="formType">表单类型</param>
            <param name="tags">tags</param>
            <param name="isAdd">是否新增页面</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetAutoCompleteDisplay(`0,System.String,System.String,System.Object[],Rookey.Frame.Base.UserInfo)">
            <summary>
            获取智能提示下拉面板显示值，各模块通过重写此方法可以任意设置下拉显示格式
            </summary>
            <param name="t">实体对象</param>
            <param name="initModule">针对编辑表单时，原始模块</param>
            <param name="initField">针对编辑表单时，原始字段</param>
            <param name="otherParams">其他参数</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.OverSaveDetailData(Rookey.Frame.Operate.Base.TempModel.DetailFormObject,System.String@,Rookey.Frame.Base.UserInfo)">
            <summary>
            重写表单明细保存数据
            </summary>
            <param name="detailObj">明细表单数据对象</param>
            <param name="errMsg">异常信息</param>
            <param name="currUser">当前用户</param>
            <returns>返回是否执行了自定义明细保存方法</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.TreeNodeHandle(Rookey.Frame.Operate.Base.TempModel.TreeNode)">
            <summary>
            树节点处理
            </summary>
            <param name="node">节点对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.ChildNodesDataHandler(System.Collections.Generic.List{`0},Rookey.Frame.Base.UserInfo)">
            <summary>
            树子节点集合处理
            </summary>
            <param name="childDatas">所有子结点数据</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetPermissionExp(Rookey.Frame.Base.UserInfo,System.String@,System.Boolean)">
            <summary>
            权限过滤条件表达式，如x=>x.Name=="name"
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="filterWhere">权限过滤SQL语句，如 Name='name'</param>
            <param name="queryCache">是否从缓存中查询</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.HasRecordOperatePermission(Rookey.Frame.Base.UserInfo,`0,System.Int32)">
            <summary>
            是否有记录的操作（查看，更新、删除）权限
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="t">单据对象</param>
            <param name="type">类型，0-查看，1-更新，2-删除</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetFlowNextHandleNodeName(System.Guid,System.String,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取流程下一处理节点名称
            </summary>
            <param name="recordId">记录ID</param>
            <param name="workflowName">流程名称</param>
            <param name="currNodeName">当前节点名称</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.BeforeFlowOperateCheck(Rookey.Frame.Base.UserInfo,System.Guid,Rookey.Frame.Model.EnumSpace.WorkActionEnum,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String)">
            <summary>
            流程操作前验证事件
            </summary>
            <param name="currUser">当前用户</param>
            <param name="recordId">记录ID</param>
            <param name="workAction">操作动作</param>
            <param name="toDoTaskId">待办ID，为空时为发起</param>
            <param name="returnNodeId">回退ID</param>
            <param name="directHandler">被指派人ID</param>
            <param name="currNodeName">当前节点名称</param>
            <returns>返回验证失败信息，为空表示验证成功</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.AfterFlowOperateCompleted(System.Guid,System.String,Rookey.Frame.Base.UserInfo,System.Boolean,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,System.String)">
            <summary>
            流程操作完成后事件处理
            </summary>
            <param name="id">记录ID</param>
            <param name="currNodeName">当前流程结点名称</param>
            <param name="currUser">当前处理人</param>
            <param name="isOpSuccess">是否操作成功</param>
            <param name="workAction">流程操作动作，同意、拒绝、。。。</param>
            <param name="flowStatus">流程状态</param>
            <param name="approvalOpinions">审批意见</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetNodeHandler(System.Guid,System.String,System.Guid,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取结点处理人
            </summary>
            <param name="recordId">记录ID</param>
            <param name="nodeName">结点名称</param>
            <param name="workFlowInstId">流程实例ID</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetWorkTodoTitle(System.Guid,System.String,Rookey.Frame.Base.UserInfo)">
            <summary>
            获取待办标题
            </summary>
            <param name="recordId">记录ID</param>
            <param name="workflowName">流程名称</param>
            <param name="currUser">发起人</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.WorkflowMsgNotify(System.Guid,System.String,Rookey.Frame.Model.EnumSpace.WorkActionEnum,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Base.UserInfo,Rookey.Frame.Model.OrgM.OrgM_Emp,System.Collections.Generic.Dictionary{System.Guid,System.String},System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String})">
            <summary>
            流程消息通知
            </summary>
            <param name="recordId">记录ID</param>
            <param name="nodeName">结点名称</param>
            <param name="workAction">操作</param>
            <param name="flowStatus">流程状态</param>
            <param name="currUser">当前用户</param>
            <param name="empStarter">发起人</param>
            <param name="nextHandlers">下一处理人及对应跳转URL</param>
            <param name="notifyUrl">知会时跳转URL</param>
            <param name="isEmailNotify">是否邮件通知，否则为短信通知</param>
            <param name="otherDicCcs">其他需要知会的人员，主要针对邮件通知</param>
            <param name="subjectContens">主题内容，List[0]为主题，List[1]为内容</param>
            <returns>返回null继续走通用处理，否则表示处理成功</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetImportTemplateFields(System.Collections.Generic.List{System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回导入模板字段，导入模板中将只出现返回后的字段
            </summary>
            <param name="formFields">表单字段</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetExportFields(System.Collections.Generic.List{System.String},Rookey.Frame.Base.UserInfo)">
            <summary>
            返回导出字段列
            </summary>
            <param name="gridFields">列表字段</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetGridHTML(Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Collections.Generic.List{System.String},System.Nullable{System.Guid},System.Boolean,System.Web.HttpRequestBase)">
            <summary>
            返回网格页面HTML
            </summary>
            <param name="gridType">网格类型</param>
            <param name="condition">过滤条件</param>
            <param name="where">where过滤条件</param>
            <param name="viewId">视图Id</param>
            <param name="initModule">针对表单弹出外键选择框，表单原始模块</param>
            <param name="initField">针对表单外键弹出框，表单原始字段</param>
            <param name="otherParams">其他参数</param>
            <param name="detailCopy">明细复制</param>
            <param name="filterFields">过滤字段</param>
            <param name="menuId">菜单ID，从哪个菜单进来的</param>
            <param name="isGridLeftTree">是否网格左侧树，针对附属网格</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetSimpleSearchHTML(System.Collections.Generic.List{Rookey.Frame.Model.Sys.Sys_GridField},Rookey.Frame.Operate.Base.EnumDef.DataGridType,System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.Web.HttpRequestBase)">
            <summary>
            获取简单搜索HTML
            </summary>
            <param name="searchFields">可搜索字段</param>
            <param name="gridType">网格类型</param>
            <param name="condition">过滤条件</param>
            <param name="where">where过滤条件</param>
            <param name="viewId">视图Id</param>
            <param name="initModule">针对表单弹出外键选择框，表单原始模块</param>
            <param name="initField">针对表单外键弹出框，表单原始字段</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetEditFormHTML(System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取编辑表单HTML
            </summary>
            <param name="id">记录Id</param>
            <param name="gridId">为网格表单编辑模式的网格Id</param>
            <param name="copyId">复制时被复制的记录Id</param>
            <param name="showTip">是否显示表单tip按钮</param>
            <param name="todoTaskId">待办任务ID</param>
            <param name="formId">指定表单ID</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetEditDetailHTML(System.Nullable{System.Guid},System.Boolean@,System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取编辑表单明细编辑网格HTML
            </summary>
            <param name="id">记录ID</param>
            <param name="detailTopDisplay">明细是否顶部显示</param>
            <param name="copyId">复制记录ID</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetViewFormHTML(System.Guid,System.String,System.String,System.Boolean,System.Boolean,System.Nullable{System.Guid},System.Web.HttpRequestBase)">
            <summary>
            获取查看表单HTML
            </summary>
            <param name="id">记录Id</param>
            <param name="gridId">为网格表单查看模式的网格Id</param>
            <param name="fromEditPageFlag">从编辑页面点击查看按钮标识</param>
            <param name="isRecycle">是否来自回收站</param>
            <param name="showTip">是否显示表单tip按钮</param>
            <param name="formId">指定表单ID</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetViewDetailHTML(System.Nullable{System.Guid},System.Boolean@,System.Web.HttpRequestBase)">
            <summary>
            获取查看表单明细查看网格HTML
            </summary>
            <param name="id">记录ID</param>
            <param name="detailTopDisplay">明细是否顶部显示</param>
            <param name="request">请求对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.OperateHandleFactory`1.GetFlowTipsHTML(System.Guid,Rookey.Frame.Model.EnumSpace.WorkFlowStatusEnum,Rookey.Frame.Base.UserInfo)">
            <summary>
            流程UI重新绘制
            </summary>
            <param name="recordId">记录ID</param>
            <param name="flowStatus">流程状态</param>
            <param name="currUser">当前用户</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.IUserOperateHandle">
            <summary>
            用户操作处理接口
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUserOperateHandle.AfterLoginSuccess(System.Web.HttpSessionStateBase,System.Web.HttpRequestBase,System.Web.HttpResponseBase,System.String,System.String,System.Int32)">
            <summary>
            登录成功后
            </summary>
            <param name="session">session</param>
            <param name="request">request</param>
            <param name="response">response</param>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
            <param name="expires">有效时间（分钟）</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUserOperateHandle.AfterRegiterUser(System.String,System.String,System.String)">
            <summary>
            用户注册后操作处理
            </summary>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
            <param name="nickName">昵称</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUserOperateHandle.AfterChangePwd(System.String,System.String,System.String)">
            <summary>
            用户修改密码后操作处理
            </summary>
            <param name="username">用户名</param>
            <param name="oldPwd">旧密码</param>
            <param name="newPwd">新密码</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.IUserOperateHandle.AfterDeleteUser(System.String)">
            <summary>
            删除用户后处理操作
            </summary>
            <param name="username"></param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory">
            <summary>
            用户操作处理
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory.GetUserOperateHandleInstances">
            <summary>
            获取通用操作接口对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory.AfterLoginSuccess(System.Web.HttpSessionStateBase,System.Web.HttpRequestBase,System.Web.HttpResponseBase,System.String,System.String,System.Int32)">
            <summary>
            登录成功后操作处理
            </summary>
            <param name="session">session</param>
            <param name="request">request</param>
            <param name="response">response</param>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
            <param name="expires">有效时间（分钟）</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory.AfterRegiterUser(System.String,System.String,System.String)">
            <summary>
            用户注册后操作处理
            </summary>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
            <param name="nickName">昵称</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory.AfterChangePwd(System.String,System.String,System.String)">
            <summary>
            用户修改密码后操作处理
            </summary>
            <param name="username">用户名</param>
            <param name="oldPwd">旧密码</param>
            <param name="newPwd">新密码</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.OperateHandle.UserOperateHandleFactory.AfterDeleteUser(System.String)">
            <summary>
            删除用户
            </summary>
            <param name="username"></param>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo">
            <summary>
            附件信息
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.Id">
            <summary>
            附件Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.AttachFile">
            <summary>
            附件路径
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.PdfFile">
            <summary>
            pdf路径
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.SwfFile">
            <summary>
            swf路径
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.FileDes">
            <summary>
            文件描述
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.AttachFileInfo.AttachType">
            <summary>
            附件类型
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.ConditionItem">
            <summary>
            用于存储查询条件的单元
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.ConditionItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.ConditionItem.#ctor(System.String,Rookey.Frame.Operate.Base.EnumDef.QueryMethod,System.Object)">
            <summary>
            带参数构造函数
            </summary>
            <param name="field">字段</param>
            <param name="method">条件</param>
            <param name="val">值</param>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ConditionItem.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ConditionItem.Method">
            <summary>
            查询方式，用于标记查询方式HtmlName中使用[]进行标识
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ConditionItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.ConditionItem.OrGroup">
            <summary>
            如果使用Or组合，则此组组合为一个Or序列
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FormButton">
            <summary>
            表单按钮
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.TagId">
            <summary>
            标签Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.DisplayText">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.IconType">
            <summary>
            按钮图标类型
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.ClickMethod">
            <summary>
            按钮调用方法
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.Icon">
            <summary>
            按钮图标
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormButton.ParentToDoId">
            <summary>
            父待办ID，针对子流程
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.FormDataObject">
            <summary>
            表单数据对象
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ModuleData">
            <summary>
            模块数据
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.Details">
            <summary>
            模块明细
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.IsDraft">
            <summary>
            是否保存为草稿
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.IsReleaseDraft">
            <summary>
            是否发布草稿
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.OpFlowBtnId">
            <summary>
            操作的流程按钮ID，为0时为提交流程，大于0时为审批流程
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ToDoTaskId">
            <summary>
            待办任务ID，如果当前为子流程审批，则当前为父待办ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ChildTodoIds">
            <summary>
            子流程待办ID集合，针对子流程审批用到
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ApprovalOpinions">
            <summary>
            审批意见
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.ReturnNodeId">
            <summary>
            回退结点ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.FormDataObject.DirectHandler">
            <summary>
            被指派处理人ID
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.NameValueObject">
            <summary>
            键值对象
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.NameValueObject.name">
            <summary>
            键
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.NameValueObject.value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.DetailFormObject">
            <summary>
            明细表单对象
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DetailFormObject.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DetailFormObject.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.DetailFormObject.ModuleDatas">
            <summary>
            明细行数据
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.PageInfo">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.PageInfo.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.PageInfo.#ctor(System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Boolean})">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex">页编号</param>
            <param name="pageSize">页大小</param>
            <param name="orderFields">排序字段</param>
            <param name="isdescs">是否降序排列</param>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.pageIndexStartNo">
            <summary>
            页码起始值，默认为1
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.pageIndexKeyWord">
            <summary>
            页码关键字
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.pageSizeKeyWord">
            <summary>
            页记录数关键字
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.sortFieldKeyWord">
            <summary>
            排序字段关键字
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.sortOrderKeyWord">
            <summary>
            排序方式关键字
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.totalRecordKeyWord">
            <summary>
            总记录数关键字，分页返回JSON结构中用到
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.TempModel.PageInfo.pageDataKeyWord">
            <summary>
            分页数据关键字，分页返回JSON结构中用到
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.PageInfo.GetDefaultPageInfo">
            <summary>
            获取默认分页信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.PageInfo.GetPageInfo(System.Web.HttpRequestBase,System.String)">
            <summary>
            根据request获取分页信息
            </summary>
            <param name="request">request对象</param>
            <param name="defaultSortField">默认排序字段</param>
            <returns></returns>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PageInfo.page">
            <summary>
            页号
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PageInfo.pagesize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PageInfo.sortname">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PageInfo.sortorder">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.PageInfo.totalCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.TreeNode">
            <summary>
            树结点类
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.TempModel.TreeNode.Parse``1(``0,System.Action{``0,Rookey.Frame.Operate.Base.TempModel.TreeNode},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            将其他树节点类型转换到TreeNode类型
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="obj">实体对象</param>
            <param name="parseAction">转换方法</param>
            <param name="childsProperty">子节点属性</param>
            <returns>转换后的节点信息</returns>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.text">
            <summary>
            节点文本
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.iconCls">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.state">
            <summary>
            节点状态，异步用到
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeNode.attribute">
            <summary>
            节点其他属性
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempModel.TreeAttributes">
            <summary>
            树属性
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeAttributes.url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempModel.TreeAttributes.obj">
            <summary>
            扩展对象
            </summary>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.UserOperate">
            <summary>
            用户操作类
            </summary>
        </member>
        <member name="F:Rookey.Frame.Operate.Base.UserOperate._adminUser">
            <summary>
            超级管理员
            </summary>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.TempUserOperate(System.Guid,System.String)">
            <summary>
            临时用户操作
            </summary>
            <param name="userId">用户Id</param>
            <param name="userpwd">用户密码</param>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserNameByUserId(System.Guid)">
            <summary>
            根据用户Id获取用户名
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserIdByUserName(System.String)">
            <summary>
            根据用户名获取用户Id
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserInfo(System.String,System.String,System.String@)">
            <summary>
            登录系统，获取用户信息
            </summary>
            <param name="username">用户名</param>
            <param name="userpwd">密码</param>
            <param name="errMsg">异常信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserInfo(System.Guid)">
            <summary>
            获取用户信息
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserInfo(Rookey.Frame.Model.Sys.Sys_User)">
            <summary>
            获取用户信息
            </summary>
            <param name="user">用户对象</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.UserIsValid(System.String,System.String@)">
            <summary>
            账户是否有效
            </summary>
            <param name="username"></param>
            <param name="errMsg">异常信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetPassword(System.Guid)">
            <summary>
            获取用户密码，找回密码
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.ModifyPassword(System.Guid,System.String,System.String@)">
            <summary>
            修改密码
            </summary>
            <param name="userId">用户Id</param>
            <param name="newPwd">新密码</param>
            <param name="errMsg">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.UpdateUserAliasName(System.Guid,System.String)">
            <summary>
            更新用户的别名
            </summary>
            <param name="userId">用户Id</param>
            <param name="aliasName">用户别名</param>
            <returns>成功返回空字符串，失败返回异常信息</returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.UpdateUserAliasName(System.String,System.String)">
            <summary>
            修改用户别名
            </summary>
            <param name="username">用户名</param>
            <param name="aliasName">用户别名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetSuperAdmin">
            <summary>
            获取超级管理员用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.IsSuperAdmin(System.Guid)">
            <summary>
            是否为超级管理员
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.AddUser(System.String@,System.String,System.String,System.Nullable{System.Guid},System.String)">
            <summary>
            添加用户
            </summary>
            <param name="errMsg">异常信息</param>
            <param name="username">用户名</param>
            <param name="userpwd">用户密码</param>
            <param name="orgId">组织Id</param>
            <param name="aliasName">用户别名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.FrozenUser(System.String)">
            <summary>
            冻结账号
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.DelUser(System.String)">
            <summary>
            删除用户
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetAllUsers(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_User,System.Boolean}})">
            <summary>
            获取所有用户
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUser(System.String)">
            <summary>
            获取用户
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUser(System.Guid)">
            <summary>
            获取用户
            </summary>
            <param name="userId">用户ID</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Rookey.Frame.Operate.Base.UserOperate.LoadOrgUserTree(System.Nullable{System.Guid},System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_User,System.Boolean}})”忽略有格式错误的 XML 注释 -->
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetUserExtend(Rookey.Frame.Base.UserInfo)">
            <summary>
            获取用户扩展信息
            </summary>
            <param name="userInfo">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetAllOrgs(System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_Organization,System.Boolean}})">
            <summary>
            获取所有组织
            </summary>
            <param name="expression">条件表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetOrgRoot">
            <summary>
            获取组织根结点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetOrg(System.Guid)">
            <summary>
            获取组织
            </summary>
            <param name="orgId">组织Id</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetOrg(System.String)">
            <summary>
            获取组织
            </summary>
            <param name="orgName">组织名称</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetOrgUsers(System.Guid,System.Boolean,System.Linq.Expressions.Expression{System.Func{Rookey.Frame.Model.Sys.Sys_User,System.Boolean}})">
            <summary>
            获取组织用户
            </summary>
            <param name="orgId">组织Id</param>
            <param name="isDirect">是否取直接组织下用户,为否时包含子组织下用户</param>
            <param name="expression">过滤表达式</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetChildOrgs(System.Guid,System.Boolean)">
            <summary>
            获取子组织
            </summary>
            <param name="parentOrgId">父级组织ID</param>
            <param name="isDirect">是否直接子组织，否则取所有子级组织</param>
            <returns></returns>
        </member>
        <member name="M:Rookey.Frame.Operate.Base.UserOperate.GetFormatOrgs(System.Collections.Generic.List{System.String})">
            <summary>
            根据组织Id集合获取组织集合，包括为0的组织，为0的组织表示"本部门"，
            为-1的表示全部
            </summary>
            <param name="orgIds">组织Id集合</param>
            <returns></returns>
        </member>
        <member name="T:Rookey.Frame.Operate.Base.TempOrganization">
            <summary>
            临时组织类
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempOrganization.Id">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempOrganization.Name">
            <summary>
            组织名称
            </summary>
        </member>
        <member name="P:Rookey.Frame.Operate.Base.TempOrganization.Des">
            <summary>
            组织描述
            </summary>
        </member>
    </members>
</doc>
